{"version":3,"sources":["reportWebVitals.ts","theme.ts","views/QuizGame/Buttons.tsx","views/QuizGame/index.tsx","bg/ee72e41123a09d160822985d61668c18.jpg","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","type","useStyles","makeStyles","theme","root","margin","spacing","Buttons","classes","className","Button","variant","color","disabled","href","imgContainer","position","background","border","btnContainer","img","width","QuizGame","props","Grid","container","item","src","imageUrl","alt","buttons","map","b","i","style","top","left","size","height","App","ThemeProvider","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","Menu","Container","maxWidth","image","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"2KAceA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gFCPCQ,cAAe,CAC5BC,QAAS,CACPC,KAAM,U,gBCAJC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,SAKb,SAASC,IACtB,IAAMC,EAAUP,IAEhB,OACE,sBAAKQ,UAAWD,EAAQJ,KAAxB,UACE,cAACM,EAAA,EAAD,CAAQC,QAAQ,YAAhB,qBACA,cAACD,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAlC,qBAGA,cAACF,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAlC,uBAGA,cAACF,EAAA,EAAD,CAAQC,QAAQ,YAAYE,UAAQ,EAApC,sBAGA,cAACH,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUE,KAAK,qBAAjD,qBCrBN,IAAMb,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCY,aAAc,CACZV,OAAQF,EAAMG,QAAQ,EAAG,EAAG,GAC5BU,SAAU,WAEV,aAAc,CACZA,SAAU,WAEVC,WAAY,cACZC,OAAQ,SAGZC,aAAc,CACZd,OAAQF,EAAMG,QAAQ,IAExBc,IAAK,CACHC,MAAO,YAII,SAASC,EAASC,GAO/B,IAAMf,EAAUP,IAEhB,OACE,eAACuB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,EAAA,EAAD,CAAME,MAAI,EAACjB,UAAWD,EAAQO,aAA9B,UACE,qBAAKY,IAAKJ,EAAMK,SAAUC,IAAI,UAAUpB,UAAWD,EAAQY,MAC1DG,EAAMO,QAAQC,KAAI,SAACC,EAAGC,GACrB,OACE,wBAEEC,MAAO,CACLC,IAAKH,EAAEhB,SAASmB,IAChBC,KAAMJ,EAAEhB,SAASoB,KACjBf,MAAOW,EAAEK,KAAKhB,MACdiB,OAAQN,EAAEK,KAAKC,SALZL,SAWb,cAACT,EAAA,EAAD,CAAME,MAAI,EAACjB,UAAWD,EAAQW,aAA9B,SACE,cAACZ,EAAD,SCtDO,UAA0B,6DC4C1BgC,MA3Bf,WACE,OACE,mCACE,eAACC,EAAA,EAAD,CAAerC,MAAOA,EAAtB,UACE,cAACsC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQ1B,SAAS,SAAjB,SACE,eAAC2B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQjC,MAAM,UAAUkC,aAAW,OAApD,SACE,cAACC,EAAA,EAAD,MAEF,cAACrC,EAAA,EAAD,CAAQE,MAAM,UAAd,wBAGJ,cAACoC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAAC3B,EAAD,CACEM,SAAUsB,EACVpB,QAAS,CACP,CAAEd,SAAU,CAAEmB,IAAK,MAAOC,KAAM,OAASC,KAAM,CAAEhB,MAAO,MAAOiB,OAAQ,QACvE,CAAEtB,SAAU,CAAEmB,IAAK,MAAOC,KAAM,OAASC,KAAM,CAAEhB,MAAO,MAAOiB,OAAQ,mBC9BrFa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BlE,EAAgBmE,QAAQC,O","file":"static/js/main.05723108.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Buttons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button variant=\"contained\">Default</Button>\r\n      <Button variant=\"contained\" color=\"primary\">\r\n        Primary\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"secondary\">\r\n        Secondary\r\n      </Button>\r\n      <Button variant=\"contained\" disabled>\r\n        Disabled\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\r\n        Link\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\n\r\nimport Buttons from './Buttons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  imgContainer: {\r\n    margin: theme.spacing(8, 0, 3),\r\n    position: 'relative',\r\n\r\n    '& > button': {\r\n      position: 'absolute',\r\n\r\n      background: 'transparent',\r\n      border: 'none',\r\n    },\r\n  },\r\n  btnContainer: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  img: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nexport default function QuizGame(props: {\r\n  imageUrl: string;\r\n  buttons: {\r\n    position: { top: number | string; left: number | string };\r\n    size: { width: number | string; height: number | string };\r\n  }[];\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item className={classes.imgContainer}>\r\n        <img src={props.imageUrl} alt=\"Desktop\" className={classes.img} />\r\n        {props.buttons.map((b, i) => {\r\n          return (\r\n            <button\r\n              key={i}\r\n              style={{\r\n                top: b.position.top,\r\n                left: b.position.left,\r\n                width: b.size.width,\r\n                height: b.size.height,\r\n              }}\r\n            ></button>\r\n          );\r\n        })}\r\n      </Grid>\r\n      <Grid item className={classes.btnContainer}>\r\n        <Buttons />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/ee72e41123a09d160822985d61668c18.f65544bc.jpg\";","import {\n  AppBar,\n  Button,\n  Container,\n  CssBaseline,\n  IconButton,\n  ThemeProvider,\n  Toolbar,\n} from '@material-ui/core';\nimport { Menu } from '@material-ui/icons';\nimport React from 'react';\nimport './styles/styles.css';\nimport theme from './theme';\nimport QuizGame from './views/QuizGame';\n\nimport image from './bg/ee72e41123a09d160822985d61668c18.jpg';\n\nfunction App() {\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n              <Menu />\n            </IconButton>\n            <Button color=\"inherit\">Login</Button>\n          </Toolbar>\n        </AppBar>\n        <Container maxWidth=\"lg\">\n          <QuizGame\n            imageUrl={image}\n            buttons={[\n              { position: { top: '10%', left: '10%' }, size: { width: '20%', height: '20%' } },\n              { position: { top: '40%', left: '10%' }, size: { width: '20%', height: '20%' } },\n            ]}\n          />\n        </Container>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}