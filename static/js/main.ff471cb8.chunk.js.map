{"version":3,"sources":["theme.ts","components/actions/AppButton.tsx","components/actions/AppTextInput.tsx","components/ActionableImage.tsx","store/game.ts","components/AppImage.tsx","assets/tasks/1/availablenetworks.png","assets/tasks/1/connectedopennetwork.png","assets/tasks/1/connectedsecurenetwork.png","assets/tasks/1/discoverableonnetwork.png","assets/tasks/1/desktopnetworknotconnected.png","assets/tasks/1/pressonopennetwork.png","assets/tasks/1/pressonsecurenetwork.png","assets/tasks/1/typeinpassword.png","game-data/task1.ts","assets/tasks/2/antiviruspopup.png","assets/tasks/2/antivirussettingsoff.png","assets/tasks/2/antivirussettingson.png","game-data/index.ts","game-data/task2.ts","game-data/task3.ts","assets/tasks/3/changepassword.png","game-data/task4.ts","assets/tasks/4/Email- Emails.png","game-data/task5.ts","assets/tasks/5/Email- Attachment.png","game-data/task6.ts","assets/tasks/6/Email- Link.png","game-data/task7.ts","assets/tasks/7/Email- Blackmail.png","game-data/task8.ts","assets/tasks/8/Email- Money transfer.png","game-data/task9.ts","assets/tasks/9/Email- Netflix password.png","game-data/task10.ts","assets/tasks/10/Websites-Facebouk.png","game-data/task11.ts","assets/tasks/10/Websites-washington.edu2.png","game-data/task12.ts","assets/tasks/10/Websites-Amazon2.png","game-data/task13.ts","assets/tasks/10/Websites-Washington post.png","game-data/task14.ts","assets/tasks/10/Websites-SEB.png","game-data/task15.ts","assets/tasks/10/Websites- NY times.png","components/FeedbackDialog.tsx","components/ProgressBar.tsx","views/QuizGame/index.tsx","components/Stepper.tsx","components/TaskDescriptionPanel/TabsPanel.tsx","hooks/useWindowDimensions.ts","components/TaskDescriptionPanel/TaskDescriptionPanel.tsx","App.tsx","store/index.ts","index.tsx"],"names":["createMuiTheme","palette","type","AppButton","props","dispatch","useDispatch","gameState","useSelector","state","game","style","top","position","left","width","size","height","onClick","AppTextInput","onChange","changeEvent","target","value","useStyles","makeStyles","imgContainer","background","border","prevClick","x","y","ActionableImage","classes","className","e","rect","getBoundingClientRect","pos","clientX","clientY","posPercentage","posPercentageOffset","console","info","JSON","stringify","toFixed","component","buttons","map","b","i","textFields","t","firstScreenId","slice","createSlice","name","initialState","points","activeTaskId","activeScreenId","showFeedbackDialog","feedbackText","reducers","setActiveTaskId","payload","id","setActiveScreenId","closeFeedbackDialog","openFeedbackDialog","text","nextTaskId","next","taskId","nextScreenId","screenId","updatePoints","gameOver","setUserInput","userInput","task3Feedback","twoFactorSelected","length","gameActions","actions","fromUrl","src","alt","task1data","title","setting","instructions","description","screens","desktopnetworknotconnected","availablenetworks","pressonsecurenetwork","pressonopennetwork","POINTS_WRONG_ANSWER","typeinpassword","connectedopennetwork","connectedsecurenetwork","discoverableonnetwork","window","alert","log","gameTasks","1","2","antiviruspopup","antivirussettingsoff","antivirussettingson","3","changepassword","newValue","4","emails","5","attachment","6","link","7","blackmail","8","moneytransfer","9","netflixpassword","10","facebook","11","washingtonedu","12","amazon","13","washingtonpost","14","seb","15","nytimes","DialogTitle","disableTypography","Typography","variant","FeedbackDialog","Dialog","open","DialogActions","Button","autoFocus","color","BorderLinearProgress","withStyles","theme","root","borderRadius","colorPrimary","backgroundColor","grey","bar","LinearProgress","CustomizedProgressBar","React","useState","progress","setProgress","useEffect","margin","spacing","btnContainer","QuizGame","undefined","screenData","setScreenData","gameItems","Grid","container","item","xs","VerticalStepper","activeStep","setActiveStep","steps","Object","keys","sort","parseInt","toString","Stepper","orientation","label","index","Step","StepLabel","StepContent","step","TabPanel","role","hidden","activeTabId","tabId","Box","p","children","paper","TabsPanel","activeTab","setActiveTab","Paper","square","elevation","Tabs","centered","v","Tab","icon","Info","List","QuestionAnswer","gutterBottom","fullWidth","getWindowDimensions","innerWidth","innerHeight","sidebarContainer","zIndex","display","transition","padding","breakpoints","down","drawerBtn","TaskDescriptionPanel","panelVisible","setPanelVisible","setWidth","styles","activeTask","setActiveTask","screenWidth","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","marginLeft","DoubleArrow","transform","App","ThemeProvider","CssBaseline","Container","maxWidth","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff471cb8.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core';\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});","import { ActionProps } from 'game-data';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppState } from 'store';\n\nexport default function AppButton(props: {\n  position: { top: number | string; left: number | string };\n  size: { width: number | string; height: number | string };\n  onClick?: (props: ActionProps) => void;\n}) {\n  const dispatch = useDispatch();\n  const gameState = useSelector((state: AppState) => state.game);\n\n  return (\n    <button\n      style={{\n        top: props.position.top,\n        left: props.position.left,\n        width: props.size.width,\n        height: props.size.height,\n      }}\n      onClick={() => {\n        if (props.onClick) {\n          props.onClick({ dispatch, state: gameState });\n        }\n      }}\n    ></button>\n  );\n}\n","import { ActionProps } from 'game-data';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppState } from 'store';\n\nexport default function AppTextInput(props: {\n  position: { top: number | string; left: number | string };\n  size: { width: number | string; height: number | string };\n  type?: string;\n  onChange?: (value: string, props: ActionProps) => void;\n}) {\n  const dispatch = useDispatch();\n  const gameState = useSelector((state: AppState) => state.game);\n\n  return (\n    <input\n      style={{\n        top: props.position.top,\n        left: props.position.left,\n        width: props.size.width,\n        height: props.size.height,\n      }}\n      type={props.type}\n      onChange={(changeEvent) => {\n        if (props.onChange) {\n          props.onChange(changeEvent.target.value, {\n            dispatch,\n            state: gameState,\n          });\n        }\n      }}\n    ></input>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { ScreenData } from 'game-data';\r\nimport React from 'react';\r\nimport AppButton from './actions/AppButton';\r\nimport AppTextInput from './actions/AppTextInput';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  imgContainer: {\r\n    position: 'relative',\r\n\r\n    '& > img': {\r\n      width: '100%',\r\n    },\r\n\r\n    '& > *:not(img)': {\r\n      position: 'absolute',\r\n\r\n      background: 'transparent',\r\n      border: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\n// For debug, while creating tasks.\r\nlet prevClick = { x: 0, y: 0 };\r\n\r\nexport default function ActionableImage(props: ScreenData) {\r\n  const classes = useStyles();\r\n\r\n  const handleContainerClick = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n  ) => {\r\n    var rect = (e.target as HTMLElement).getBoundingClientRect();\r\n    const pos = {\r\n      x: e.clientX - rect.left,\r\n      y: e.clientY - rect.top,\r\n    };\r\n\r\n    const posPercentage = {\r\n      x: pos.x / rect.width,\r\n      y: pos.y / rect.height,\r\n    };\r\n\r\n    const posPercentageOffset = {\r\n      x: prevClick.x - posPercentage.x,\r\n      y: prevClick.y - posPercentage.y,\r\n    };\r\n\r\n    prevClick = posPercentage;\r\n\r\n    console.info('Clicked on:', pos, posPercentage, posPercentageOffset);\r\n    console.info(\r\n      JSON.stringify({\r\n        position: {\r\n          top: `${(posPercentage.y * 100).toFixed(2)}%`,\r\n          left: `${(posPercentage.x * 100).toFixed(2)}%`,\r\n        },\r\n        size: {\r\n          height: `${(posPercentageOffset.y * 100).toFixed(2)}%`,\r\n          width: `${(posPercentageOffset.x * 100).toFixed(2)}%`,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.imgContainer} onClick={handleContainerClick}>\r\n      {props.component}\r\n      {props.buttons?.map((b, i) => (\r\n        <AppButton\r\n          position={b.position}\r\n          size={b.size}\r\n          onClick={b.onClick}\r\n          key={i}\r\n        />\r\n      ))}\r\n      {props.textFields?.map((t, i) => (\r\n        <AppTextInput\r\n          position={t.position}\r\n          size={t.size}\r\n          type={t.type}\r\n          key={i}\r\n          onChange={t.onChange}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nconst firstScreenId = 'desktopnetworknotconnected';\r\nconst firstTaskId = 1;\r\n\r\nconst slice = createSlice({\r\n  name: 'game',\r\n  initialState: {\r\n    points: 150,\r\n\r\n    activeTaskId: firstTaskId,\r\n    activeScreenId: firstScreenId,\r\n\r\n    showFeedbackDialog: false,\r\n    feedbackText: '',\r\n  } as {\r\n    activeTaskId: string | number;\r\n    activeScreenId: string | number;\r\n\r\n    points: number;\r\n\r\n    showFeedbackDialog: boolean;\r\n    feedbackText: string;\r\n    nextTaskId: string | number;\r\n    nextScreenId: string | number;\r\n\r\n    userInput: string;\r\n  },\r\n  reducers: {\r\n    setActiveTaskId: (\r\n      state,\r\n      { payload }: PayloadAction<{ id: string | number }>\r\n    ) => {\r\n      state.activeTaskId = payload.id;\r\n    },\r\n    setActiveScreenId: (\r\n      state,\r\n      { payload }: PayloadAction<{ id: string | number }>\r\n    ) => {\r\n      state.activeScreenId = payload.id;\r\n    },\r\n    closeFeedbackDialog: (state) => {\r\n      state.showFeedbackDialog = !state.showFeedbackDialog;\r\n    },\r\n    openFeedbackDialog: (\r\n      state,\r\n      {\r\n        payload,\r\n      }: PayloadAction<{\r\n        text: string;\r\n        next?: { taskId?: string | number; screenId?: string | number };\r\n      }>\r\n    ) => {\r\n      state.showFeedbackDialog = true;\r\n      state.feedbackText = payload.text;\r\n\r\n      state.nextTaskId = payload.next?.taskId ?? state.activeTaskId;\r\n      state.nextScreenId = payload.next?.screenId ?? state.activeScreenId;\r\n    },\r\n    updatePoints: (state, { payload }: PayloadAction<{ points: number }>) => {\r\n      state.points = state.points + payload.points;\r\n    },\r\n    gameOver: (state) => {\r\n      state.activeTaskId = firstTaskId;\r\n      state.activeScreenId = firstScreenId;\r\n    },\r\n    // setNextTaskAndScreen: (\r\n    //   state,\r\n    //   { payload }: PayloadAction<{ nextTaskId: number; nextScreenId: string }>\r\n    // ) => {\r\n    //   state.nextTaskId = payload.nextTaskId;\r\n    //   state.nextScreenId = payload.nextScreenId;\r\n    // },\r\n    setUserInput: (\r\n      state,\r\n      { payload }: PayloadAction<{ userInput: string }>\r\n    ) => {\r\n      state.userInput = payload.userInput;\r\n    },\r\n    task3Feedback: (\r\n      state,\r\n      { payload }: PayloadAction<{ twoFactorSelected: boolean }>\r\n    ) => {\r\n      if (payload.twoFactorSelected) {\r\n        state.points += 10;\r\n        state.feedbackText =\r\n          'You did not care to turn on Two-Factor-Verification (2FV)? Attackers will have access to your account in no time.';\r\n      } else {\r\n        state.feedbackText =\r\n          'Good job for turning on Two-Factor-Verification (2FV).';\r\n      }\r\n      if (state.userInput.length >= 12) {\r\n        state.points += 5;\r\n        state.feedbackText += ' Good job for selecting a safe password';\r\n      } else {\r\n        state.points -= 5;\r\n        state.feedbackText +=\r\n          ' You’re making it too easy! The password you chose was too easy to guess and compute. A safe password should have a minimum length of 12.';\r\n      }\r\n      state.nextTaskId = 4;\r\n      state.nextScreenId = 'emails';\r\n      state.showFeedbackDialog = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\nexport const gameActions = slice.actions;\r\n","import React from 'react';\r\n\r\nexport const fromUrl = (src: string) => {\r\n  return AppImage({ src });\r\n};\r\n\r\nexport default function AppImage(props: { src: string }) {\r\n  return <img src={props.src} alt=\"Desktop\" />;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/availablenetworks.1e5b6f9a.png\";","export default __webpack_public_path__ + \"static/media/connectedopennetwork.3add7549.png\";","export default __webpack_public_path__ + \"static/media/connectedsecurenetwork.16346748.png\";","export default __webpack_public_path__ + \"static/media/discoverableonnetwork.f641c86c.png\";","export default __webpack_public_path__ + \"static/media/desktopnetworknotconnected.1d992857.png\";","export default __webpack_public_path__ + \"static/media/pressonopennetwork.218e43b6.png\";","export default __webpack_public_path__ + \"static/media/pressonsecurenetwork.166db23d.png\";","export default __webpack_public_path__ + \"static/media/typeinpassword.c41db31f.png\";","import { TaskData } from '.';\r\nimport { fromUrl } from '../components/AppImage';\r\nimport { gameActions } from 'store/game';\r\nimport { POINTS_WRONG_ANSWER } from './';\r\n\r\nimport availablenetworks from 'assets/tasks/1/availablenetworks.png';\r\nimport connectedopennetwork from 'assets/tasks/1/connectedopennetwork.png';\r\nimport connectedsecurenetwork from 'assets/tasks/1/connectedsecurenetwork.png';\r\nimport discoverableonnetwork from 'assets/tasks/1/discoverableonnetwork.png';\r\nimport desktopnetworknotconnected from 'assets/tasks/1/desktopnetworknotconnected.png';\r\nimport pressonopennetwork from 'assets/tasks/1/pressonopennetwork.png';\r\nimport pressonsecurenetwork from 'assets/tasks/1/pressonsecurenetwork.png';\r\nimport typeinpassword from 'assets/tasks/1/typeinpassword.png';\r\n\r\nconst task1data: TaskData = {\r\n  title: 'Connect to Network',\r\n  setting:\r\n    'You just ordered your first coffee of the day at Starbucks. You were going to meet up there with a friend later but want to get some work done first. The cashier hands you the receipt – it has the WIFI password on it: “starplatinum”. Perfect. Time to get to work.',\r\n  instructions:\r\n    'To go online you need to connect to the network. This location has both an open and a password-protected network. Which one do you choose?',\r\n  description: 'Connect safely to the internet',\r\n  screens: {\r\n    desktopnetworknotconnected: {\r\n      component: fromUrl(desktopnetworknotconnected),\r\n      buttons: [\r\n        {\r\n          position: { left: '92%', top: '94.5%' },\r\n          size: { width: '2%', height: '4%' },\r\n          onClick: ({ dispatch }) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({ id: 'availablenetworks' })\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    availablenetworks: {\r\n      component: fromUrl(availablenetworks),\r\n      buttons: [\r\n        {\r\n          position: { left: '92%', top: '94.5%' },\r\n          size: { width: '2%', height: '4%' },\r\n          onClick: ({ dispatch }) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({\r\n                id: 'desktopnetworknotconnected',\r\n              })\r\n            );\r\n          },\r\n        },\r\n        {\r\n          position: { left: '77%', top: '28%' },\r\n          size: { width: '22%', height: '8%' },\r\n          onClick: ({ dispatch }) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({ id: 'pressonopennetwork' })\r\n            );\r\n          },\r\n        },\r\n        {\r\n          position: { left: '77%', top: '36%' },\r\n          size: { width: '22%', height: '8%' },\r\n          onClick: ({ dispatch }) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({ id: 'pressonsecurenetwork' })\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    pressonsecurenetwork: {\r\n      component: fromUrl(pressonsecurenetwork),\r\n      buttons: [\r\n        //network icon in desktop bar\r\n        {\r\n          position: { left: '92%', top: '94.5%' },\r\n          size: { width: '2%', height: '4%' },\r\n          onClick: ({ dispatch }) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({\r\n                id: 'desktopnetworknotconnected',\r\n              })\r\n            );\r\n          },\r\n        },\r\n        //connect button\r\n        {\r\n          position: { top: '48.5%', left: '89.5%' },\r\n          size: { width: '9.5%', height: '4%' },\r\n          onClick: ({ dispatch }) => {\r\n            dispatch(gameActions.setActiveScreenId({ id: 'typeinpassword' }));\r\n          },\r\n        },\r\n        //open network button\r\n        {\r\n          position: { top: '28.1%', left: '76.4%' },\r\n          size: { width: '24%', height: '8%' },\r\n          onClick: ({ dispatch }) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({ id: 'pressonopennetwork' })\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    pressonopennetwork: {\r\n      component: fromUrl(pressonopennetwork),\r\n      buttons: [\r\n        //network icon in desktop bar\r\n        {\r\n          position: { left: '92%', top: '94.5%' },\r\n          size: { width: '2%', height: '4%' },\r\n          onClick: ({ dispatch }) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({\r\n                id: 'desktopnetworknotconnected',\r\n              })\r\n            );\r\n          },\r\n        },\r\n        //secure network button\r\n        {\r\n          position: { left: '76.6%', top: '50.9%' },\r\n          size: { width: '24%', height: '8%' },\r\n          onClick: ({ dispatch }) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({ id: 'pressonsecurenetwork' })\r\n            );\r\n          },\r\n        },\r\n        //connect button\r\n        {\r\n          position: { left: '89.5%', top: '45.45%' },\r\n          size: { width: '9.5%', height: '3.5%' },\r\n          onClick: ({ dispatch }) => {\r\n            dispatch(gameActions.updatePoints({ points: POINTS_WRONG_ANSWER }));\r\n            dispatch(\r\n              gameActions.setActiveScreenId({ id: 'connectedopennetwork' })\r\n            );\r\n            dispatch(\r\n              gameActions.openFeedbackDialog({\r\n                text:\r\n                  'Oh no! Open networks should be avoided whenever possible. Accessing sensitive information on such networks can result in that data getting compromised, e.g. login data to your banking. If given the choice, it is usually better to connect to a secured network.',\r\n                next: {\r\n                  taskId: 1,\r\n                  screenId: 'desktopnetworknotconnected',\r\n                },\r\n              })\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    typeinpassword: {\r\n      component: fromUrl(typeinpassword),\r\n      buttons: [\r\n        //network icon in desktop bar\r\n        {\r\n          position: { left: '92%', top: '94.5%' },\r\n          size: { width: '2%', height: '4%' },\r\n          onClick: ({ dispatch }) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({\r\n                id: 'desktopnetworknotconnected',\r\n              })\r\n            );\r\n          },\r\n        },\r\n        //open network button\r\n        {\r\n          position: { top: '28.1%', left: '76.4%' },\r\n          size: { width: '24%', height: '8%' },\r\n          onClick: ({ dispatch }) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({ id: 'pressonopennetwork' })\r\n            );\r\n          },\r\n        },\r\n        //next button (after password entered)\r\n        {\r\n          position: { top: '52.1%', left: '79.7%' },\r\n          size: { width: '9.7%', height: '3.8%' },\r\n          onClick: ({ dispatch }) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({ id: 'discoverableonnetwork' })\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      textFields: [\r\n        {\r\n          position: { left: '79.8%', top: '47.3%' },\r\n          size: { height: '03.2%', width: '18.9%' },\r\n          type: 'password',\r\n        },\r\n      ],\r\n    },\r\n    connectedopennetwork: {\r\n      component: fromUrl(connectedopennetwork),\r\n      buttons: [\r\n        //secure network button\r\n        {\r\n          position: { left: '76.6%', top: '46.17%' },\r\n          size: { width: '24%', height: '8%' },\r\n          onClick: ({ dispatch }) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({ id: 'pressonsecurenetwork' })\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    connectedsecurenetwork: {\r\n      component: fromUrl(connectedsecurenetwork),\r\n      buttons: [],\r\n    },\r\n    discoverableonnetwork: {\r\n      component: fromUrl(discoverableonnetwork),\r\n      buttons: [\r\n        {\r\n          position: { top: '59%', left: '79.7%' },\r\n          size: { width: '9.7%', height: '3.8%' },\r\n          onClick: () => {\r\n            window.alert('fail');\r\n          },\r\n        },\r\n        {\r\n          position: { top: '59%', left: '89.5%' },\r\n          size: { width: '9.7%', height: '3.8%' },\r\n          onClick: ({ dispatch }) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({ id: 'connectedsecurenetwork' })\r\n            );\r\n            dispatch(gameActions.updatePoints({ points: 10 }));\r\n            dispatch(\r\n              gameActions.openFeedbackDialog({\r\n                text:\r\n                  'Good! It’s always better to leave attackers the least possible amount of attack surface, which you just did.',\r\n                next: {\r\n                  screenId: 'antiviruspopup',\r\n                  taskId: 2,\r\n                },\r\n              })\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  buttons: [\r\n    {\r\n      text: 'dawdawa',\r\n      onClick: ({ dispatch, state }) => {\r\n        console.log(dispatch, state);\r\n      },\r\n    },\r\n    {\r\n      text: 'dawdawa',\r\n      onClick: ({ dispatch, state }) => {\r\n        console.log(dispatch, state);\r\n      },\r\n    },\r\n    {\r\n      text: 'dawdawa',\r\n      onClick: ({ dispatch, state }) => {\r\n        console.log(dispatch, state);\r\n      },\r\n    },\r\n    {\r\n      text: 'dawdawa',\r\n      onClick: ({ dispatch, state }) => {\r\n        console.log(dispatch, state);\r\n      },\r\n    },\r\n    {\r\n      text: 'dawdawa',\r\n      onClick: ({ dispatch, state }) => {\r\n        console.log(dispatch, state);\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport default task1data;\r\n","export default __webpack_public_path__ + \"static/media/antiviruspopup.98332630.png\";","export default __webpack_public_path__ + \"static/media/antivirussettingsoff.0443898b.png\";","export default __webpack_public_path__ + \"static/media/antivirussettingson.52d29d00.png\";","import { AppDispatch } from '../store';\r\nimport gameReducer from 'store/game';\r\n\r\nimport task1data from './task1';\r\nimport task2data from './task2';\r\nimport task3data from './task3';\r\nimport task4data from './task4';\r\nimport task5data from './task5';\r\nimport task6data from './task6';\r\nimport task7data from './task7';\r\nimport task8data from './task8';\r\nimport task9data from './task9';\r\nimport task10data from './task10';\r\nimport task11data from './task11';\r\nimport task12data from \"./task12\";\r\nimport task13data from \"./task13\";\r\nimport task14data from \"./task14\";\r\nimport task15data from \"./task15\";\r\n\r\nexport interface TaskData {\r\n  title: string;\r\n  setting?: string;\r\n  instructions?: string;\r\n  description: string;\r\n  screens: { [key: string]: ScreenData };\r\n  buttons?: { text: string; onClick?: (props: ActionProps) => void }[];\r\n}\r\n\r\nexport type ScreenElement<T> = {\r\n  position: { top: number | string; left: number | string };\r\n  size: { width: number | string; height: number | string };\r\n} & T;\r\n\r\nexport type ActionProps = {\r\n  dispatch: AppDispatch;\r\n  state: ReturnType<typeof gameReducer>;\r\n};\r\n\r\nexport interface ScreenData {\r\n  component: React.ReactNode;\r\n  buttons?: ScreenElement<{\r\n    onClick?: (props: ActionProps) => void;\r\n  }>[];\r\n  textFields?: ScreenElement<{\r\n    placeholder?: string;\r\n    type?: string;\r\n    onChange?: (value: string, props: ActionProps) => void;\r\n  }>[];\r\n}\r\n\r\nconst gameTasks: { [taskId: string]: TaskData } = {\r\n  1: task1data,\r\n  2: task2data,\r\n  3: task3data,\r\n  4: task4data,\r\n  5: task5data,\r\n  6: task6data,\r\n  7: task7data,\r\n  8: task8data,\r\n  9: task9data,\r\n  10:task10data,\r\n  11:task11data,\r\n  12:task12data,\r\n  13:task13data,\r\n  14:task14data,\r\n  15:task15data,\r\n};\r\nexport default gameTasks;\r\nexport const POINTS_WRONG_ANSWER = -30;\r\n","import { TaskData } from './index';\nimport { fromUrl } from '../components/AppImage';\nimport antiviruspopup from '../assets/tasks/2/antiviruspopup.png';\nimport antivirussettingsoff from '../assets/tasks/2/antivirussettingsoff.png';\nimport antivirussettingson from '../assets/tasks/2/antivirussettingson.png';\nimport { gameActions } from 'store/game';\nconst task2data: TaskData = {\n  title: 'Antivirus',\n  description: 'Deal appropriately with default antivirus',\n  screens: {\n    antiviruspopup: {\n      component: fromUrl(antiviruspopup),\n      buttons: [\n        {\n          position: { left: '75.3%', top: '78.23%' },\n          size: { width: '23.37%', height: '15.68%' },\n          onClick: ({ dispatch }) => {\n            dispatch(\n              gameActions.setActiveScreenId({ id: 'antivirussettingsoff' })\n            );\n          },\n        },\n      ],\n    },\n    antivirussettingsoff: {\n      component: fromUrl(antivirussettingsoff),\n      buttons: [\n        {\n          position: { left: '38.88%', top: '50.53%' },\n          size: { width: '2.75%', height: '2.35%' },\n          onClick: ({ dispatch }) => {\n            dispatch(gameActions.updatePoints({ points: 10 }));\n            dispatch(\n              gameActions.setActiveScreenId({ id: 'antivirussettingson' })\n            );\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text:\n                  'Alright! Now you are finally protected from known threats again. Never turn off your antivirus program, even if a software asks for it!',\n                next: {\n                  screenId: 'changepassword',\n                  taskId: 3,\n                },\n              })\n            );\n          },\n        },\n        {\n          position: { left: '79.32%', top: '1.22%' },\n          size: { width: '2.65%', height: '3.35%' },\n          onClick: ({ dispatch }) => {\n            dispatch(gameActions.updatePoints({ points: -10 }));\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text:\n                  'What are you doing?! You were supposed to turn on the antivirus software! Even just the default Windows virus & threat protection will keep you safe from known malware and attacks.',\n                next: {\n                  screenId: 'changepassword',\n                  taskId: 3,\n                },\n              })\n            );\n          },\n        },\n        {\n          position: { left: '38.88%', top: '75.5%' },\n          size: { width: '2.65%', height: '2.35%' },\n          onClick: ({ dispatch }) => {\n            dispatch(gameActions.updatePoints({ points: -10 }));\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text:\n                  'What are you doing?! You were supposed to turn on the antivirus software, not turn it off even further! Even just the default Windows virus & threat protection will keep you safe from known malware and attacks.',\n                next: {\n                  screenId: 'changepassword',\n                  taskId: 3,\n                },\n              })\n            );\n          },\n        },\n      ],\n    },\n    antivirussettingson: {\n      component: fromUrl(antivirussettingson),\n      buttons: [],\n    },\n  },\n};\nexport default task2data;\n","import { TaskData } from '.';\nimport { fromUrl } from '../components/AppImage';\nimport { gameActions } from 'store/game';\n\nimport changepassword from 'assets/tasks/3/changepassword.png';\n\nconst task1data: TaskData = {\n  title: 'Choose a safe password.',\n  setting: 'It has been 6 months since you have changed your password.',\n  instructions: 'Choose a safe password.',\n  description: 'Choose a safe password.',\n  screens: {\n    changepassword: {\n      component: fromUrl(changepassword),\n      buttons: [\n        {\n          position: { left: '92%', top: '94.5%' },\n          size: { width: '2%', height: '4%' },\n          onClick: ({ dispatch }) => {\n            // dispatch(\n            //   gameActions.setActiveScreenId({ id: 'availablenetworks' })\n            // );\n          },\n        },\n        {\n          position: { left: '7.28%', top: '71.87%' },\n          size: { width: '15.75%', height: '10.17%' },\n          onClick: ({ dispatch }) => {\n            dispatch(gameActions.task3Feedback({ twoFactorSelected: true }));\n          },\n        },\n        {\n          position: { left: '48.63%', top: '71.87%' },\n          size: { width: '32.02%', height: '10.17%' },\n          onClick: ({ dispatch }) => {\n            dispatch(gameActions.task3Feedback({ twoFactorSelected: false }));\n          },\n        },\n      ],\n      textFields: [\n        {\n          position: { left: '5.99%', top: '39.03%' },\n          size: { height: '5.84%', width: '74.83%' },\n          type: 'password',\n        },\n        {\n          position: { left: '5.99%', top: '56.21%' },\n          size: { height: '5.84%', width: '74.83%' },\n          type: 'password',\n          onChange: (newValue: string, { dispatch }) => {\n            console.log('new input value: ' + newValue);\n            dispatch(gameActions.setUserInput({ userInput: newValue }));\n          },\n        },\n      ],\n    },\n  },\n};\n\nexport default task1data;\n","export default __webpack_public_path__ + \"static/media/changepassword.02533d2c.png\";","import { TaskData } from '.';\nimport { fromUrl } from '../components/AppImage';\nimport { gameActions } from 'store/game';\n\nimport emails from 'assets/tasks/4/Email- Emails.png';\n\nconst task4data: TaskData = {\n  title: 'Emails',\n  setting:\n    'It is time to read your emails. In your mailbox, there are several emails.',\n  instructions: 'Investigate them and decide on your course of action.',\n  description: 'Investigate them and decide on your course of action.',\n  screens: {\n    emails: {\n      component: fromUrl(emails),\n      buttons: [\n        {\n          position: { left: '0%', top: '13.8888889%' },\n          size: { width: '22.65625%', height: '15.2777778%' },\n          onClick: ({ dispatch }) => {\n            dispatch(gameActions.setActiveTaskId({ id: 5 }));\n            dispatch(gameActions.setActiveScreenId({ id: 'attachment' }));\n          },\n        },\n        // {\n        //     position:{left:\"0%\", top:\"29.1666667%\"},\n        //     size: {width:\"22.65625%\", height:\"15.2777778%\"}\n        // },\n        // {\n        //     position:{left:\"0%\", top:\"44.4444444%\"},\n        //     size: {width:\"22.65625%\", height:\"15.2777778%\"}\n        // },\n        // {\n        //     position:{left:\"0%\", top:\"59.7222222%\"},\n        //     size: {width:\"22.65625%\", height:\"15.2777778%\"}\n        // },\n        // {\n        //     position:{left:\"0%\",top:\"75%\"},\n        //     size: {width:\"22.65625%\", height:\"13.8888889%\"}\n        // },\n        {\n          position: { left: '0%', top: '88.88%' },\n          size: { width: '100%', height: '11.11%' },\n          onClick: ({ dispatch }) => {\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text:\n                  'Game over! Don’t get tricked by malicious ads. That’s how you actually infect your computer.',\n                next: {\n                  taskId: 1,\n                  screenId: 'desktopnetworknotconnected',\n                },\n              })\n            );\n\n          },\n        },\n      ],\n    },\n  },\n};\n\nexport default task4data;\n","export default __webpack_public_path__ + \"static/media/Email- Emails.bb9c0c2b.png\";","import { TaskData } from '.';\nimport { fromUrl } from '../components/AppImage';\nimport { gameActions } from 'store/game';\n\nimport attachment from 'assets/tasks/5/Email- Attachment.png';\n\nconst task5data: TaskData = {\n  title: 'Malicious email attachment',\n  setting: 'This email appears to be from an unknown sender.',\n  instructions: 'Investigate and decide on your course of action.',\n  description: 'Investigate and decide on your course of action.',\n  screens: {\n    attachment: {\n      component: fromUrl(attachment),\n      buttons: [\n        //reply button\n        {\n          position: { left: '75.78125%', top: '9.5333333%' },\n          size: { width: '6.71875%', height: '4.5833333%' },\n          onClick: ({ dispatch }) => {\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text:\n                  'Do not engage in conversations with a scammer, you may not notice revealing valuable information about yourself.',\n                next: {\n                  taskId: 6,\n                  screenId: 'link',\n                },\n              })\n            );\n            dispatch(gameActions.updatePoints({ points: -5 }));\n          },\n        },\n        //report spam button\n        {\n          position: { left: '83.59375%', top: '9.5333333%' },\n          size: { width: '6.71875%', height: '4.5833333%' },\n          onClick: ({ dispatch }) => {\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text:\n                  'Smart! Reporting spam helps your email’s algorithms to recognize suspicious emails as spam.',\n                next: {\n                  taskId: 6,\n                  screenId: 'link',\n                },\n              })\n            );\n            dispatch(gameActions.updatePoints({ points: 10 }));\n          },\n        },\n        //close button\n        {\n          position: { left: '91.40625%', top: '9.5333333%' },\n          size: { width: '6.71875%', height: '4.5833333%' },\n          onClick: ({ dispatch }) => {\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text: 'Good! Ignoring suspicious emails is one way to do it.',\n                next: {\n                  taskId: 6,\n                  screenId: 'link',\n                },\n              })\n            );\n            dispatch(gameActions.updatePoints({ points: 5 }));\n          },\n        },\n        //attachment button\n        {\n          position: { left: '24.609375%', top: '43.6111111%' },\n          size: { width: '14.0625%', height: '5.5555556%' },\n          onClick: ({ dispatch }) => {\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text:\n                  'Never download email attachments from unverified sources, attachments may contain hidden malware.',\n                next: {\n                  taskId: 6,\n                  screenId: 'link',\n                },\n              })\n            );\n            dispatch(gameActions.updatePoints({ points: -10 }));\n          },\n        },\n        {\n          position: { left: '0%', top: '88.88%' },\n          size: { width: '100%', height: '11.11%' },\n          onClick: ({ dispatch }) => {\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text:\n                  'Game over! Don’t get tricked by malicious ads. That’s how you actually infect your computer.',\n                next: {\n                  taskId: 1,\n                  screenId: 'desktopnetworknotconnected',\n                },\n              })\n            );\n          },\n        },\n      ],\n    },\n  },\n};\n\nexport default task5data;\n","export default __webpack_public_path__ + \"static/media/Email- Attachment.e9f8a7bb.png\";","import { TaskData } from '.';\nimport { fromUrl } from '../components/AppImage';\nimport { gameActions } from 'store/game';\n\nimport link from 'assets/tasks/6/Email- Link.png';\n\nconst task6data: TaskData = {\n    title: 'Suspicious link',\n    setting:\n        'It is time to read your emails. In your mailbox, there are several emails.',\n    instructions:\n        'Investigate them and decide on your course of action.',\n    description: 'Investigate them and decide on your course of action.',\n    screens: {\n        link: {\n            component: fromUrl(link),\n            buttons:[\n                //reply button\n                {\n                    position:{left:\"75.78125%\", top:\"9.5333333%\"},\n                    size: {width:\"6.71875%\", height:\"4.5833333%\"},\n                    onClick: ({dispatch}) => {\n                        dispatch(gameActions.openFeedbackDialog({\n                            text:\n                                'Do not engage in conversations with a scammer, you may not notice revealing valuable information about yourself.',\n                            next: {\n                                taskId: 7,\n                                screenId: 'blackmail',\n                            }\n\n                        }));\n                        dispatch(gameActions.updatePoints({ points: -5 }));\n                    }\n                },\n        //report spam button\n        {\n          position: { left: '83.59375%', top: '9.5333333%' },\n          size: { width: '6.71875%', height: '4.5833333%' },\n          onClick: ({ dispatch }) => {\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text:\n                  'Smart! Reporting spam helps your email’s algorithms to recognize suspicious emails as spam.',\n                next: {\n                  taskId: 7,\n                  screenId: 'blackmail',\n                },\n              })\n            );\n            dispatch(gameActions.updatePoints({ points: 10 }));\n          },\n        },\n        //close button\n        {\n          position: { left: '91.40625%', top: '9.5333333%' },\n          size: { width: '6.71875%', height: '4.5833333%' },\n          onClick: ({ dispatch }) => {\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text: 'Good! Ignoring suspicious emails is one way to do it.',\n                next: {\n                  taskId: 7,\n                  screenId: 'blackmail',\n                },\n              })\n            );\n            dispatch(gameActions.updatePoints({ points: 5 }));\n          },\n        },\n        //link button\n        {\n          position: { left: '41.40625%', top: '34.7222222%' },\n          size: { width: '26.5625%', height: '2.7777778%' },\n          onClick: ({ dispatch }) => {\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text:\n                  'NEVER click on links in suspicious emails. Links may take you to infected websites or even auto-download malicious files.',\n                next: {\n                  taskId: 7,\n                  screenId: 'blackmail',\n                },\n              })\n            );\n            dispatch(gameActions.updatePoints({ points: -10 }));\n          },\n        },\n        {\n          position: { left: '0%', top: '88.88%' },\n          size: { width: '100%', height: '11.11%' },\n          onClick: ({ dispatch }) => {\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text:\n                  'Game over! Don’t get tricked by malicious ads. That’s how you actually infect your computer.',\n                next: {\n                  taskId: 1,\n                  screenId: 'desktopnetworknotconnected',\n                },\n              })\n            );\n          },\n        },\n      ],\n    },\n  },\n};\n\nexport default task6data;\n","export default __webpack_public_path__ + \"static/media/Email- Link.56bb2123.png\";","import { TaskData } from '.';\nimport { fromUrl } from '../components/AppImage';\nimport { gameActions } from 'store/game';\n\nimport blackmail from 'assets/tasks/7/Email- Blackmail.png';\n\nconst task7data: TaskData = {\n    title: 'Blackmail',\n    setting:\n        'It is time to read your emails. In your mailbox, there are several emails.',\n    instructions:\n        'Investigate them and decide on your course of action.',\n    description: 'Investigate them and decide on your course of action.',\n    screens: {\n        blackmail: {\n            component: fromUrl(blackmail),\n            buttons:[\n                //reply button\n                {\n                    position: {left: \"75.78125%\", top: \"9.5333333%\"},\n                    size: {width: \"6.71875%\", height: \"4.5833333%\"},\n                    onClick: ({dispatch}) => {\n                        dispatch(\n                            gameActions.openFeedbackDialog({\n                                text:\n                                    'Do not engage in conversations with a scammer, you may not notice revealing valuable information about yourself.',\n                                next: {\n                                    taskId: 8,\n                                    screenId: 'moneytransfer',\n                                },\n                            })\n                        );\n                        dispatch(gameActions.updatePoints({ points: -5 }));\n                    }\n                },\n        //report spam button\n        {\n          position: { left: '83.59375%', top: '9.5333333%' },\n          size: { width: '6.71875%', height: '4.5833333%' },\n          onClick: ({ dispatch }) => {\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text:\n                  'Smart! Reporting spam helps your email’s algorithms to recognize suspicious emails as spam.',\n                next: {\n                  taskId: 8,\n                  screenId: 'moneytransfer',\n                },\n              })\n            );\n            dispatch(gameActions.updatePoints({ points: 10 }));\n          },\n        },\n        //close button\n        {\n          position: { left: '91.40625%', top: '9.5333333%' },\n          size: { width: '6.71875%', height: '4.5833333%' },\n          onClick: ({ dispatch }) => {\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text: 'Good! Ignoring suspicious emails is one way to do it.',\n                next: {\n                  taskId: 8,\n                  screenId: 'moneytransfer',\n                },\n              })\n            );\n            dispatch(gameActions.updatePoints({ points: 5 }));\n          },\n        },\n        {\n          position: { left: '0%', top: '88.88%' },\n          size: { width: '100%', height: '11.11%' },\n          onClick: ({ dispatch }) => {\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text:\n                  'Game over! Don’t get tricked by malicious ads. That’s how you actually infect your computer.',\n                next: {\n                  taskId: 1,\n                  screenId: 'desktopnetworknotconnected',\n                },\n              })\n            );\n          },\n        },\n      ],\n    },\n  },\n};\n\nexport default task7data;\n","export default __webpack_public_path__ + \"static/media/Email- Blackmail.936ac049.png\";","import { TaskData } from '.';\nimport { fromUrl } from '../components/AppImage';\nimport { gameActions } from 'store/game';\n\nimport moneytransfer from 'assets/tasks/8/Email- Money transfer.png';\n\nconst task8data: TaskData = {\n    title: 'Money transfer',\n    setting:\n        'It is time to read your emails. In your mailbox, there are several emails.',\n    instructions:\n        'Investigate them and decide on your course of action.',\n    description: 'Investigate them and decide on your course of action.',\n    screens: {\n        moneytransfer: {\n            component: fromUrl(moneytransfer),\n            buttons:[\n                //reply button\n                {\n                    position:{left:\"75.78125%\", top:\"9.5333333%\"},\n                    size: {width:\"6.71875%\", height:\"4.5833333%\"},\n                    onClick: ({dispatch}) => {\n                        dispatch(\n                            gameActions.openFeedbackDialog({\n                                text:\n                                    'Do not engage in conversations with a scammer, you may not notice revealing valuable information about yourself.',\n                                next: {\n                                    taskId: 9,\n                                    screenId: 'netflixpassword',\n                                },\n                            })\n                        );\n                        dispatch(gameActions.updatePoints({ points: -5 }));\n                }\n        },\n\n        //report spam button\n        {\n          position: { left: '83.59375%', top: '9.5333333%' },\n          size: { width: '6.71875%', height: '4.5833333%' },\n          onClick: ({ dispatch }) => {\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text:\n                  'Smart! Reporting spam helps your email’s algorithms to recognize suspicious emails as spam.',\n                next: {\n                  taskId: 9,\n                  screenId: 'netflixpassword',\n                },\n              })\n            );\n              dispatch(gameActions.updatePoints({ points: 10 }));\n          },\n        },\n        //close button\n        {\n          position: { left: '91.40625%', top: '9.5333333%' },\n          size: { width: '6.71875%', height: '4.5833333%' },\n          onClick: ({ dispatch }) => {\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text: 'Good! Ignoring suspicious emails is one way to do it.',\n                next: {\n                  taskId: 9,\n                  screenId: 'netflixpassword',\n                },\n              })\n            );\n              dispatch(gameActions.updatePoints({ points: 5 }));\n          },\n        },\n        {\n          position: { left: '0%', top: '88.88%' },\n          size: { width: '100%', height: '11.11%' },\n          onClick: ({ dispatch }) => {\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text:\n                  'Game over! Don’t get tricked by malicious ads. That’s how you actually infect your computer.',\n                next: {\n                  taskId: 1,\n                  screenId: 'desktopnetworknotconnected',\n                },\n              })\n            );\n          },\n        },\n      ],\n    },\n  },\n};\n\nexport default task8data;\n","export default __webpack_public_path__ + \"static/media/Email- Money transfer.5d21133f.png\";","import { TaskData } from '.';\nimport { fromUrl } from '../components/AppImage';\nimport { gameActions } from 'store/game';\n\nimport netflixpassword from 'assets/tasks/9/Email- Netflix password.png';\n\nconst task9data: TaskData = {\n    title: 'Netflix password',\n    setting:\n        'It is time to read your emails. In your mailbox, there are several emails.',\n    instructions:\n        'Investigate them and decide on your course of action.',\n    description: 'Investigate them and decide on your course of action.',\n    screens: {\n        netflixpassword: {\n            component: fromUrl(netflixpassword),\n            buttons:[\n                //reply button\n                {\n                    position:{left:\"75.78125%\", top:\"9.5333333%\"},\n                    size: {width:\"6.71875%\", height:\"4.5833333%\"},\n                    onClick: ({dispatch}) => {\n                        dispatch(gameActions.updatePoints({ points: -5 }));\n                        dispatch(\n                            gameActions.openFeedbackDialog({\n                                text:\n                                    'Do not engage in conversations with a scammer, you may not notice revealing valuable information about yourself.',\n                            })\n                        );\n                    }\n                },\n        //report spam button\n        {\n          position: { left: '83.59375%', top: '9.5333333%' },\n          size: { width: '6.71875%', height: '4.5833333%' },\n          onClick: ({ dispatch }) => {\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text:\n                  'Smart! Reporting spam helps your email’s algorithms to recognize suspicious emails as spam.',\n                next: {\n                  taskId: 10,\n                  screenId: 'facebook',\n                },\n              })\n            );\n            dispatch(gameActions.updatePoints({ points: 10 }));\n          },\n        },\n        //close button\n        {\n          position: { left: '91.40625%', top: '9.5333333%' },\n          size: { width: '6.71875%', height: '4.5833333%' },\n          onClick: ({ dispatch }) => {\n            dispatch(\n              gameActions.openFeedbackDialog({\n                text: 'Good! Ignoring suspicious emails is one way to do it.',\n                next: {\n                  taskId: 10,\n                  screenId: 'facebook',\n                },\n              })\n            );\n            dispatch(gameActions.updatePoints({ points: 5 }));\n          },\n        },\n      ],\n    },\n  },\n};\n\nexport default task9data;\n","export default __webpack_public_path__ + \"static/media/Email- Netflix password.c54ac902.png\";","import { TaskData } from '.';\nimport { fromUrl } from '../components/AppImage';\nimport { gameActions } from 'store/game';\n\nimport facebouk from 'assets/tasks/10/Websites-Facebouk.png';\n\nconst task10data: TaskData = {\n    title: 'Facebook',\n    description:'You have to determine whether a website is secure or not.',\n    instructions:'',\n    setting: 'You have to determine whether a website is secure or not.',\n    screens: {\n        facebook: {\n            component: fromUrl(facebouk),\n            buttons: [\n\n            ]\n        }\n    },\n    buttons: [\n        {\n            text: 'Secure',\n            onClick: ({ dispatch, state }) => {\n                dispatch(gameActions.openFeedbackDialog({\n                    text: \"Be careful and look at the URL again – “www.facebouk.com” is not the real Facebook! Someone is trying to steal your login information.\",\n                    next: {screenId: 'washingtonedu', taskId: 11}\n                }))\n                dispatch(gameActions.updatePoints({ points: -5 }));\n            },\n        },\n        {\n            text: 'Not secure',\n            onClick: ({ dispatch, state }) => {\n                dispatch(gameActions.openFeedbackDialog({\n                    text:\"Good job - “www.facebouk.com” is not the real Facebook! Someone tried to steal your login information.\",\n                    next: {screenId: 'washingtonedu', taskId: 11}\n                }))\n                dispatch(gameActions.updatePoints({ points: 5 }));\n            },\n        }\n    ]\n}\n\nexport default task10data;","export default __webpack_public_path__ + \"static/media/Websites-Facebouk.187b5120.png\";","import { TaskData } from '.';\nimport { fromUrl } from '../components/AppImage';\nimport { gameActions } from 'store/game';\n\nimport washingtonedu from 'assets/tasks/10/Websites-washington.edu2.png';\n\nconst task11data: TaskData = {\n    title: 'Washington edu',\n    description:'You have to determine whether a website is secure or not.',\n    instructions:'',\n    setting: 'You have to determine whether a website is secure or not.',\n    screens: {\n        washingtonedu: {\n            component: fromUrl(washingtonedu),\n            buttons: [\n\n            ]\n        }\n    },\n    buttons: [\n        {\n            text: 'Secure',\n            onClick: ({ dispatch, state }) => {\n                dispatch(gameActions.openFeedbackDialog({\n                    text: \"Be careful! http connections are not secure as no encryption in provided to secure your data. You shouldn’t put personal information in such sites.\",\n                    next: {screenId: 'amazon', taskId: 12}\n                }));\n                dispatch(gameActions.updatePoints({ points: -5 }));\n            },\n        },\n        {\n            text: 'Not secure',\n            onClick: ({ dispatch, state }) => {\n                dispatch(gameActions.openFeedbackDialog({\n                    text:\"Good job! http connections are not secure as no encryption in provided to secure your data. You shouldn’t put personal information in such sites.\",\n                    next: {screenId: 'amazon', taskId: 12}\n                }));\n                dispatch(gameActions.updatePoints({ points: 5 }));\n            },\n        }\n    ]\n}\n\nexport default task11data;","export default __webpack_public_path__ + \"static/media/Websites-washington.edu2.e4238b1d.png\";","//Websites-Amazon2\nimport { TaskData } from '.';\nimport { fromUrl } from '../components/AppImage';\nimport { gameActions } from 'store/game';\n\nimport amazon from 'assets/tasks/10/Websites-Amazon2.png';\n\nconst task12data: TaskData = {\n    title: 'Amazon',\n    description:'You have to determine whether a website is secure or not.',\n    instructions:'',\n    setting: 'You have to determine whether a website is secure or not.',\n    screens: {\n        amazon: {\n            component: fromUrl(amazon),\n            buttons: [\n\n            ]\n        }\n    },\n    buttons: [\n        {\n            text: 'Secure',\n            onClick: ({ dispatch, state }) => {\n                dispatch(gameActions.openFeedbackDialog({\n                    text: \"Correct! There is nothing wrong with this site!\",\n                    next: {screenId: 'washingtonpost', taskId: 13}\n                }));\n                dispatch(gameActions.updatePoints({ points: 5 }));\n            },\n        },\n        {\n            text: 'Not secure',\n            onClick: ({ dispatch, state }) => {\n                dispatch(gameActions.openFeedbackDialog({\n                    text:\"Wrong! There is nothing wrong with this site!\",\n                    next: {screenId: 'washingtonpost', taskId: 13}\n                }));\n                dispatch(gameActions.updatePoints({ points: -5 }));\n            },\n        }\n    ]\n}\n\nexport default task12data;","export default __webpack_public_path__ + \"static/media/Websites-Amazon2.a6cb559c.png\";","//Websites-Amazon2\nimport { TaskData } from '.';\nimport { fromUrl } from '../components/AppImage';\nimport { gameActions } from 'store/game';\n\nimport washingtonpost from 'assets/tasks/10/Websites-Washington post.png';\n\nconst task13data: TaskData = {\n    title: 'Washington Post',\n    description:'You have to determine whether a website is secure or not.',\n    instructions:'',\n    setting: 'You have to determine whether a website is secure or not.',\n    screens: {\n        washingtonpost: {\n            component: fromUrl(washingtonpost),\n            buttons: [\n\n            ]\n        }\n    },\n    buttons: [\n        {\n            text: 'Secure',\n            onClick: ({ dispatch, state }) => {\n                dispatch(gameActions.openFeedbackDialog({\n                    text: \"Be careful! This site has a weird domain that does not match the real www.washingtonpost.com\",\n                    next: {screenId: 'seb', taskId: 14}\n                }));\n                dispatch(gameActions.updatePoints({ points: -5 }));\n            },\n        },\n        {\n            text: 'Not secure',\n            onClick: ({ dispatch, state }) => {\n                dispatch(gameActions.openFeedbackDialog({\n                    text:\"Nice! You recognized that there is something wrong with the domain.\",\n                    next: {screenId: 'seb', taskId: 14}\n                }));\n                dispatch(gameActions.updatePoints({ points: 5 }));\n            },\n        }\n    ]\n}\n\nexport default task13data;","export default __webpack_public_path__ + \"static/media/Websites-Washington post.25608407.png\";","//Websites-Amazon2\nimport { TaskData } from '.';\nimport { fromUrl } from '../components/AppImage';\nimport { gameActions } from 'store/game';\n\nimport seb from 'assets/tasks/10/Websites-SEB.png';\n\nconst task14data: TaskData = {\n    title: 'SEB bank',\n    description:'You have to determine whether a website is secure or not.',\n    instructions:'',\n    setting: 'You have to determine whether a website is secure or not.',\n    screens: {\n        seb: {\n            component: fromUrl(seb),\n            buttons: [\n\n            ]\n        }\n    },\n    buttons: [\n        {\n            text: 'Secure',\n            onClick: ({ dispatch, state }) => {\n                dispatch(gameActions.openFeedbackDialog({\n                    text: \"Correct! There is nothing wrong with this site!\",\n                    next: {screenId: 'nytimes', taskId: 15}\n                }));\n                dispatch(gameActions.updatePoints({ points: 5 }));\n            },\n        },\n        {\n            text: 'Not secure',\n            onClick: ({ dispatch, state }) => {\n                dispatch(gameActions.openFeedbackDialog({\n                    text:\"Wrong! There is nothing wrong with this site!\",\n                    next: {screenId: 'nytimes', taskId: 15}\n                }));\n                dispatch(gameActions.updatePoints({ points: -5 }));\n            },\n        }\n    ]\n}\n\nexport default task14data;","export default __webpack_public_path__ + \"static/media/Websites-SEB.9784a79f.png\";","//Websites-Amazon2\nimport { TaskData } from '.';\nimport { fromUrl } from '../components/AppImage';\nimport { gameActions } from 'store/game';\n\nimport nytimes from 'assets/tasks/10/Websites- NY times.png';\n\nconst task15data: TaskData = {\n    title: 'New York Times',\n    description:'You have to determine whether a website is secure or not.',\n    instructions:'',\n    setting: 'You have to determine whether a website is secure or not.',\n    screens: {\n        nytimes: {\n            component: fromUrl(nytimes),\n            buttons: [\n\n            ]\n        }\n    },\n    buttons: [\n        {\n            text: 'Secure',\n            onClick: ({ dispatch, state }) => {\n                dispatch(gameActions.openFeedbackDialog({\n                    text: \"Incorrect! Inspect the logo and URL again. Nor logo, nor URL match the real NY times.\",\n                    next: {screenId: 'nytimes', taskId: 15}\n                }));\n                dispatch(gameActions.updatePoints({ points: -5 }));\n            },\n        },\n        {\n            text: 'Not secure',\n            onClick: ({ dispatch, state }) => {\n                dispatch(gameActions.openFeedbackDialog({\n                    text:\"Correct! You the wrong logo and URL!\",\n                    next: {screenId: 'nytimes', taskId: 15}\n                }));\n                dispatch(gameActions.updatePoints({ points: 5 }));\n            },\n        }\n    ]\n}\n\nexport default task15data;","export default __webpack_public_path__ + \"static/media/Websites- NY times.e790cd7a.png\";","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { AppDispatch, AppState } from '../store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { gameActions } from '../store/game';\n\nconst DialogTitle = (props: {\n  text: string;\n  onConfirmation?: (dispatch: AppDispatch) => void;\n}) => {\n  return (\n    <MuiDialogTitle\n      disableTypography\n      className=\"MuiTypography-root MuiTypography-h6\"\n    >\n      <Typography variant=\"h6\">{props.text}</Typography>\n    </MuiDialogTitle>\n  );\n};\n\nexport default function FeedbackDialog() {\n  const gameState = useSelector((state: AppState) => state.game);\n  const dispatch = useDispatch();\n\n  const onConfirmation = function () {\n    dispatch(gameActions.closeFeedbackDialog());\n\n    dispatch(gameActions.setActiveTaskId({ id: gameState.nextTaskId }));\n    dispatch(gameActions.setActiveScreenId({ id: gameState.nextScreenId }));\n  };\n\n  return (\n    <div>\n      <Dialog open={gameState.showFeedbackDialog}>\n        <DialogTitle text={gameState.feedbackText}></DialogTitle>\n        <DialogActions>\n          <Button autoFocus onClick={onConfirmation} color=\"primary\">\n            Go to next task\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '../store';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor:\n      theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#1a90ff',\n  },\n}))(LinearProgress);\n\nexport default function CustomizedProgressBar() {\n  const [progress, setProgress] = React.useState(50);\n  const gameState = useSelector((state: AppState) => state.game);\n  useEffect(() => {\n    const progress = (gameState.points / 300) * 100;\n    setProgress(progress);\n  }, [gameState.points]);\n  return (\n    <div>\n      <BorderLinearProgress variant=\"determinate\" value={progress} />\n    </div>\n  );\n}\n","import { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ActionableImage from '../../components/ActionableImage';\r\nimport { AppState } from '../../store';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { gameActions } from '../../store/game';\r\nimport gameItems, { ScreenData } from '../../game-data';\r\nimport FeedbackDialog from '../../components/FeedbackDialog';\r\nimport CustomizedProgressBar from '../../components/ProgressBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  imgContainer: {\r\n    margin: theme.spacing(4),\r\n  },\r\n  btnContainer: {\r\n    margin: theme.spacing(0),\r\n  },\r\n}));\r\n\r\nexport default function QuizGame() {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const gameState = useSelector((state: AppState) => state.game);\r\n  const [screenData, setScreenData] = useState(\r\n    undefined as ScreenData | undefined\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(gameActions.setActiveTaskId({ id: 1 }));\r\n    dispatch(\r\n      gameActions.setActiveScreenId({ id: 'desktopnetworknotconnected' })\r\n    );\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setScreenData(\r\n      gameState.activeTaskId && gameState.activeScreenId\r\n        ? gameItems[gameState.activeTaskId].screens[gameState.activeScreenId]\r\n        : undefined\r\n    );\r\n  }, [gameState.activeTaskId, gameState.activeScreenId]);\r\n\r\n  if (!screenData) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12}>\r\n        <CustomizedProgressBar />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.imgContainer}>\r\n        <ActionableImage {...screenData} />\r\n        <FeedbackDialog />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport gameItems from 'game-data';\nimport Typography from '@material-ui/core/Typography';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '../store';\n\nfunction getSteps() {\n  const keys = Object.keys(gameItems).sort();\n  return keys.map((x) => gameItems[x].title);\n}\n\nfunction getStepContent(step: number) {\n  return gameItems[step + 1] ? gameItems[step + 1].description : '';\n}\n\nexport default function VerticalStepper() {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const gameState = useSelector((state: AppState) => state.game);\n  useEffect(() => {\n    let activeTaskId = gameState.activeTaskId ? gameState.activeTaskId : -1;\n    activeTaskId = parseInt(activeTaskId.toString());\n    console.log(activeTaskId);\n    if (activeTaskId !== -1) {\n      setActiveStep(activeTaskId - 1);\n    }\n  }, [gameState.activeTaskId]);\n  return (\n    <div>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              <Typography>{getStepContent(index)}</Typography>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  );\n}\n","import React, { PropsWithChildren } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Info, QuestionAnswer, List } from '@material-ui/icons';\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Tab,\n  Tabs,\n  Typography,\n} from '@material-ui/core';\nimport VerticalStepper from 'components/Stepper';\nimport { ActionProps } from 'game-data';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppState } from 'store';\n\nfunction TabPanel(\n  props: PropsWithChildren<{\n    tabId: number;\n    activeTabId: number;\n  }>\n) {\n  return (\n    <div role=\"tabpanel\" hidden={props.activeTabId !== props.tabId}>\n      {props.activeTabId === props.tabId && <Box p={3}>{props.children}</Box>}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: '100%',\n  },\n}));\n\nexport default function TabsPanel(props: {\n  info: { title: string; setting?: string; instructions?: string };\n  buttons?: { text: string; onClick?: (props: ActionProps) => void }[];\n}) {\n  const classes = useStyles();\n  const [activeTab, setActiveTab] = React.useState(2);\n\n  const dispatch = useDispatch();\n  const gameState = useSelector((state: AppState) => state.game);\n\n  return (\n    <>\n      <Paper square className={classes.paper} elevation={3}>\n        <Tabs\n          centered\n          value={activeTab}\n          onChange={(e, v) => {\n            setActiveTab(v);\n          }}\n        >\n          <Tab icon={<Info />} />\n          <Tab icon={<List />} />\n          <Tab icon={<QuestionAnswer />} />\n        </Tabs>\n      </Paper>\n      <TabPanel activeTabId={activeTab} tabId={0}>\n        <Typography gutterBottom variant=\"h4\">\n          {props.info.title}\n        </Typography>\n        <Typography gutterBottom variant=\"body1\">\n          {props.info.setting}\n        </Typography>\n        <Typography gutterBottom variant=\"body2\">\n          {props.info.instructions}\n        </Typography>\n        {props.buttons ? (\n          <Grid container spacing={1}>\n            {props.buttons.map((b) => (\n              <Grid item xs={6}>\n                <Button\n                  fullWidth\n                  variant=\"outlined\"\n                  onClick={() => {\n                    if (b.onClick) {\n                      b.onClick({ dispatch, state: gameState });\n                    }\n                  }}\n                >\n                  {b.text}\n                </Button>\n              </Grid>\n            ))}\n          </Grid>\n        ) : null}\n      </TabPanel>\n      <TabPanel activeTabId={activeTab} tabId={1}>\n        <VerticalStepper />\n      </TabPanel>\n      <TabPanel activeTabId={activeTab} tabId={2}>\n        <Typography variant=\"h3\" gutterBottom>\n          Welcome to GOME\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n          Check out other tabs in the sidebar to see your current assignment.\n          This panel can be opened and closed whenever you please. Some tasks\n          will be performed in this window.\n        </Typography>\n        <Typography variant=\"body2\" gutterBottom>\n          Cyber awareness training tool for ITC8210HACS, TalTech.\n        </Typography>\n        <Typography variant=\"caption\">\n          Authors:\n          <ul>\n            <li>Elizabete Liene Šterna 201671IVCM</li>\n            <li>Gediminas Milašius 201678IVCM</li>\n            <li>Marieke Jahn 201684IVCM</li>\n            <li>Olivier Levasseur 201637IVCM</li>\n          </ul>\n        </Typography>\n      </TabPanel>\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nconst getWindowDimensions = () => ({\n  width: window.innerWidth,\n  height: window.innerHeight,\n});\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions());\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import { Button, makeStyles, Paper } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { DoubleArrow } from '@material-ui/icons';\nimport TabsPanel from './TabsPanel';\nimport useWindowDimensions from 'hooks/useWindowDimensions';\nimport { AppState } from 'store';\nimport { useSelector } from 'react-redux';\nimport gameTasks, { TaskData } from 'game-data';\n\nconst sidebarWidth = 530;\n\nconst useStyles = makeStyles((theme) => ({\n  sidebarContainer: {\n    position: 'absolute',\n    top: '1rem',\n    height: 'calc(100% - 2rem)',\n    zIndex: 100,\n    display: 'flex',\n  },\n  paper: {\n    width: sidebarWidth,\n    transition: 'all 0.3s',\n    padding: theme.spacing(2),\n\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n    },\n  },\n  drawerBtn: {\n    transition: 'all 0.3s',\n  },\n}));\n\nexport default function TaskDescriptionPanel() {\n  const [panelVisible, setPanelVisible] = useState(true);\n  const [width, setWidth] = useState(0);\n  const styles = useStyles();\n\n  const [activeTask, setActiveTask] = useState<TaskData | undefined>();\n\n  const { width: screenWidth } = useWindowDimensions();\n\n  const activeTaskId = useSelector(\n    (state: AppState) => state.game.activeTaskId\n  );\n\n  useEffect(() => {\n    setActiveTask(activeTaskId ? gameTasks[activeTaskId] : undefined);\n  }, [activeTaskId]);\n\n  useEffect(() => {\n    setWidth(screenWidth > 600 ? sidebarWidth : screenWidth);\n  }, [screenWidth]);\n\n  return (\n    <div className={styles.sidebarContainer}>\n      <Paper\n        className={styles.paper}\n        style={{ marginLeft: panelVisible ? 0 : -width }}\n      >\n        <TabsPanel\n          info={{\n            title: activeTask?.title ?? '',\n            instructions: activeTask?.instructions,\n            setting: activeTask?.setting,\n          }}\n          buttons={activeTask?.buttons}\n        />\n      </Paper>\n      <Button onClick={() => setPanelVisible(!panelVisible)}>\n        <DoubleArrow\n          className={styles.drawerBtn}\n          style={{ transform: panelVisible ? 'rotate(180deg)' : '' }}\n        />\n      </Button>\n    </div>\n  );\n}\n","import { Container, CssBaseline, ThemeProvider } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './styles/styles.css';\r\nimport theme from './theme';\r\nimport QuizGame from './views/QuizGame';\r\nimport TaskDescriptionPanel from 'components/TaskDescriptionPanel/TaskDescriptionPanel';\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <div>\r\n        <TaskDescriptionPanel />\r\n        <Container maxWidth=\"lg\">\r\n          <QuizGame />\r\n        </Container>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction } from '@reduxjs/toolkit';\r\nimport { Action, combineReducers } from 'redux';\r\n\r\nimport game from './game';\r\n\r\nexport const rootReducer = combineReducers({\r\n  game,\r\n});\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type AppThunk = ThunkAction<void, AppState, unknown, Action<string>>;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}