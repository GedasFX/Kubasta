{"version":3,"sources":["theme.ts","components/actions/AppButton.tsx","components/actions/AppTextInput.tsx","components/ActionableImage.tsx","store/game.ts","components/AppImage.tsx","assets/tasks/1/availablenetworks.png","assets/tasks/1/connectedopennetwork.png","assets/tasks/1/connectedsecurenetwork.png","assets/tasks/1/discoverableonnetwork.png","assets/tasks/1/desktopnetworknotconnected.png","assets/tasks/1/pressonopennetwork.png","assets/tasks/1/pressonsecurenetwork.png","assets/tasks/1/typeinpassword.png","game-data/task1.ts","assets/tasks/2/antiviruspopup.png","assets/tasks/2/antivirussettingsoff.png","assets/tasks/2/antivirussettingson.png","game-data/index.ts","game-data/task2.ts","game-data/task3.ts","assets/tasks/3/changepassword.png","components/FeedbackDialog.tsx","components/ProgressBar.tsx","views/QuizGame/index.tsx","components/Stepper.tsx","components/TaskDescriptionPanel/TabsPanel.tsx","hooks/useWindowDimensions.ts","components/TaskDescriptionPanel/TaskDescriptionPanel.tsx","App.tsx","store/index.ts","index.tsx"],"names":["createMuiTheme","palette","type","AppButton","props","dispatch","useDispatch","style","top","position","left","width","size","height","onClick","AppTextInput","useStyles","makeStyles","imgContainer","background","border","prevClick","x","y","ActionableImage","classes","className","e","rect","target","getBoundingClientRect","pos","clientX","clientY","posPercentage","posPercentageOffset","console","info","JSON","stringify","toFixed","component","buttons","map","b","i","textFields","t","slice","createSlice","name","initialState","reducers","setActiveTaskId","state","payload","activeTaskId","id","setActiveScreenId","activeScreenId","toggleFeedbackDialog","showFeedbackDialog","setFeedbackDialogText","feedbackText","text","updatePoints","log","points","initializePoints","initializeFeedbackDialog","setNextTaskAndScreen","nextTaskId","nextScreenId","gameActions","actions","fromUrl","src","alt","task1data","title","setting","instructions","description","screens","desktopnetworknotconnected","availablenetworks","pressonsecurenetwork","pressonopennetwork","POINTS_WRONG_ANSWER","typeinpassword","connectedopennetwork","connectedsecurenetwork","discoverableonnetwork","window","alert","gameTasks","1","2","antiviruspopup","antivirussettingsoff","antivirussettingson","3","changepassword","DialogTitle","disableTypography","Typography","variant","FeedbackDialog","gameState","useSelector","game","useState","isOpen","setIsOpen","dialogText","setDialogText","useEffect","Dialog","open","DialogActions","Button","autoFocus","color","BorderLinearProgress","withStyles","theme","root","borderRadius","colorPrimary","backgroundColor","grey","bar","LinearProgress","CustomizedProgressBar","React","progress","setProgress","value","margin","spacing","btnContainer","QuizGame","undefined","screenData","setScreenData","gameItems","Grid","container","item","xs","VerticalStepper","activeStep","setActiveStep","steps","Object","keys","sort","parseInt","toString","Stepper","orientation","label","index","Step","StepLabel","StepContent","step","TabPanel","role","hidden","activeTabId","tabId","Box","p","children","paper","TabsPanel","activeTab","setActiveTab","Paper","square","elevation","Tabs","centered","onChange","v","Tab","icon","Info","List","QuestionAnswer","gutterBottom","getWindowDimensions","innerWidth","innerHeight","sidebarContainer","zIndex","display","transition","padding","breakpoints","down","drawerBtn","TaskDescriptionPanel","panelVisible","setPanelVisible","setWidth","styles","activeTask","setActiveTask","screenWidth","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","marginLeft","DoubleArrow","transform","App","ThemeProvider","CssBaseline","Container","maxWidth","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d8f0bd9.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core';\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from 'store';\n\nexport default function AppButton(props: {\n  position: { top: number | string; left: number | string };\n  size: { width: number | string; height: number | string };\n  onClick?: (dispatch: AppDispatch) => void;\n}) {\n  const dispatch = useDispatch();\n\n  return (\n    <button\n      style={{\n        top: props.position.top,\n        left: props.position.left,\n        width: props.size.width,\n        height: props.size.height,\n      }}\n      onClick={() => {\n        if (props.onClick) {\n          props.onClick(dispatch);\n        }\n      }}\n    ></button>\n  );\n}\n","import React from 'react';\n\nexport default function AppTextInput(props: {\n  position: { top: number | string; left: number | string };\n  size: { width: number | string; height: number | string };\n  type?: string;\n}) {\n  return (\n    <input\n      style={{\n        top: props.position.top,\n        left: props.position.left,\n        width: props.size.width,\n        height: props.size.height,\n      }}\n      type={props.type}\n    ></input>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { ScreenData } from 'game-data';\r\nimport React from 'react';\r\nimport AppButton from './actions/AppButton';\r\nimport AppTextInput from './actions/AppTextInput';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  imgContainer: {\r\n    position: 'relative',\r\n\r\n    '& > img': {\r\n      width: '100%',\r\n    },\r\n\r\n    '& > *:not(img)': {\r\n      position: 'absolute',\r\n\r\n      background: 'transparent',\r\n      border: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\n// For debug, while creating tasks.\r\nlet prevClick = { x: 0, y: 0 };\r\n\r\nexport default function ActionableImage(props: ScreenData) {\r\n  const classes = useStyles();\r\n\r\n  const handleContainerClick = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n  ) => {\r\n    var rect = (e.target as HTMLElement).getBoundingClientRect();\r\n    const pos = {\r\n      x: e.clientX - rect.left,\r\n      y: e.clientY - rect.top,\r\n    };\r\n\r\n    const posPercentage = {\r\n      x: pos.x / rect.width,\r\n      y: pos.y / rect.height,\r\n    };\r\n\r\n    const posPercentageOffset = {\r\n      x: prevClick.x - posPercentage.x,\r\n      y: prevClick.y - posPercentage.y,\r\n    };\r\n\r\n    prevClick = posPercentage;\r\n\r\n    console.info('Clicked on:', pos, posPercentage, posPercentageOffset);\r\n    console.info(\r\n      JSON.stringify({\r\n        position: {\r\n          top: `${(posPercentage.y * 100).toFixed(2)}%`,\r\n          left: `${(posPercentage.x * 100).toFixed(2)}%`,\r\n        },\r\n        size: {\r\n          height: `${(posPercentageOffset.y * 100).toFixed(2)}%`,\r\n          width: `${(posPercentageOffset.x * 100).toFixed(2)}%`,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.imgContainer} onClick={handleContainerClick}>\r\n      {props.component}\r\n      {props.buttons?.map((b, i) => (\r\n        <AppButton\r\n          position={b.position}\r\n          size={b.size}\r\n          onClick={b.onClick}\r\n          key={i}\r\n        />\r\n      ))}\r\n      {props.textFields?.map((t, i) => (\r\n        <AppTextInput\r\n          position={t.position}\r\n          size={t.size}\r\n          type={t.type}\r\n          key={i}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nconst slice = createSlice({\r\n  name: 'game',\r\n  initialState: {} as {\r\n    activeTaskId?: string | number;\r\n    activeScreenId?: string | number;\r\n    showFeedbackDialog?: boolean;\r\n    points:number;\r\n    feedbackText:string;\r\n    nextTaskId:number;\r\n    nextScreenId:string;\r\n  },\r\n  reducers: {\r\n    setActiveTaskId: (\r\n      state,\r\n      { payload }: PayloadAction<{ id?: string | number }>\r\n    ) => {\r\n      state.activeTaskId = payload.id;\r\n    },\r\n    setActiveScreenId: (\r\n      state,\r\n      { payload }: PayloadAction<{ id?: string | number }>\r\n    ) => {\r\n      state.activeScreenId = payload.id;\r\n    },\r\n    toggleFeedbackDialog: (\r\n        state,\r\n\r\n    ) => {\r\n      state.showFeedbackDialog = !state.showFeedbackDialog;\r\n    },\r\n    setFeedbackDialogText: (\r\n        state,\r\n        {payload}: PayloadAction<{text:string}>\r\n    ) => {\r\n      state.feedbackText = payload.text;\r\n    },\r\n    updatePoints: (\r\n        state,\r\n        {payload}: PayloadAction<{points:number}>\r\n    ) => {\r\n      console.log('state points: ' + state.points)\r\n      state.points = state.points + payload.points;\r\n    },\r\n    initializePoints:(\r\n        state,\r\n    ) => {\r\n      state.points = 150;\r\n    },\r\n    initializeFeedbackDialog:(\r\n      state\r\n    ) => {\r\n      state.showFeedbackDialog = false;\r\n      state.feedbackText = '';\r\n    },\r\n    setNextTaskAndScreen:(\r\n      state,\r\n      {payload}: PayloadAction<{nextTaskId:number, nextScreenId:string}>\r\n    ) => {\r\n      state.nextTaskId=payload.nextTaskId;\r\n      state.nextScreenId=payload.nextScreenId;\r\n    }\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\nexport const gameActions = slice.actions;\r\n","import React from 'react';\r\n\r\nexport const fromUrl = (src: string) => {\r\n  return AppImage({ src });\r\n};\r\n\r\nexport default function AppImage(props: { src: string }) {\r\n  return <img src={props.src} alt=\"Desktop\" />;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/availablenetworks.1e5b6f9a.png\";","export default __webpack_public_path__ + \"static/media/connectedopennetwork.3add7549.png\";","export default __webpack_public_path__ + \"static/media/connectedsecurenetwork.16346748.png\";","export default __webpack_public_path__ + \"static/media/discoverableonnetwork.f641c86c.png\";","export default __webpack_public_path__ + \"static/media/desktopnetworknotconnected.1d992857.png\";","export default __webpack_public_path__ + \"static/media/pressonopennetwork.218e43b6.png\";","export default __webpack_public_path__ + \"static/media/pressonsecurenetwork.166db23d.png\";","export default __webpack_public_path__ + \"static/media/typeinpassword.c41db31f.png\";","import { TaskData } from '.';\r\nimport { fromUrl } from '../components/AppImage';\r\nimport { gameActions } from 'store/game';\r\nimport { POINTS_WRONG_ANSWER } from './';\r\n\r\nimport availablenetworks from 'assets/tasks/1/availablenetworks.png';\r\nimport connectedopennetwork from 'assets/tasks/1/connectedopennetwork.png';\r\nimport connectedsecurenetwork from 'assets/tasks/1/connectedsecurenetwork.png';\r\nimport discoverableonnetwork from 'assets/tasks/1/discoverableonnetwork.png';\r\nimport desktopnetworknotconnected from 'assets/tasks/1/desktopnetworknotconnected.png';\r\nimport pressonopennetwork from 'assets/tasks/1/pressonopennetwork.png';\r\nimport pressonsecurenetwork from 'assets/tasks/1/pressonsecurenetwork.png';\r\nimport typeinpassword from 'assets/tasks/1/typeinpassword.png';\r\n\r\nconst task1data: TaskData = {\r\n  title: 'Connect to Network',\r\n  setting:\r\n    'You just ordered your first coffee of the day at Starbucks. You were going to meet up there with a friend later but want to get some work done first. The cashier hands you the receipt – it has the WIFI password on it: “starplatinum”. Perfect. Time to get to work.',\r\n  instructions:\r\n    'To go online you need to connect to the network. This location has both an open and a password-protected network. Which one do you choose?',\r\n  description: 'Connect safely to the internet',\r\n  screens: {\r\n    desktopnetworknotconnected: {\r\n      component: fromUrl(desktopnetworknotconnected),\r\n      buttons: [\r\n        {\r\n          position: { left: '92%', top: '94.5%' },\r\n          size: { width: '2%', height: '4%' },\r\n          onClick: (dispatch) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({ id: 'availablenetworks' })\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    availablenetworks: {\r\n      component: fromUrl(availablenetworks),\r\n      buttons: [\r\n        {\r\n          position: { left: '92%', top: '94.5%' },\r\n          size: { width: '2%', height: '4%' },\r\n          onClick: (dispatch) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({\r\n                id: 'desktopnetworknotconnected',\r\n              })\r\n            );\r\n          },\r\n        },\r\n        {\r\n          position: { left: '77%', top: '28%' },\r\n          size: { width: '22%', height: '8%' },\r\n          onClick: (dispatch) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({ id: 'pressonopennetwork' })\r\n            );\r\n          },\r\n        },\r\n        {\r\n          position: { left: '77%', top: '36%' },\r\n          size: { width: '22%', height: '8%' },\r\n          onClick: (dispatch) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({ id: 'pressonsecurenetwork' })\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    pressonsecurenetwork: {\r\n      component: fromUrl(pressonsecurenetwork),\r\n      buttons: [\r\n        //network icon in desktop bar\r\n        {\r\n          position: { left: '92%', top: '94.5%' },\r\n          size: { width: '2%', height: '4%' },\r\n          onClick: (dispatch) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({\r\n                id: 'desktopnetworknotconnected',\r\n              })\r\n            );\r\n          },\r\n        },\r\n        //connect button\r\n        {\r\n          position: { top: '48.5%', left: '89.5%' },\r\n          size: { width: '9.5%', height: '4%' },\r\n          onClick: (dispatch) => {\r\n            dispatch(gameActions.setActiveScreenId({ id: 'typeinpassword' }));\r\n          },\r\n        },\r\n        //open network button\r\n        {\r\n          position: { top: '28.1%', left: '76.4%' },\r\n          size: { width: '24%', height: '8%' },\r\n          onClick: (dispatch) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({ id: 'pressonopennetwork' })\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    pressonopennetwork: {\r\n      component: fromUrl(pressonopennetwork),\r\n      buttons: [\r\n        //network icon in desktop bar\r\n        {\r\n          position: { left: '92%', top: '94.5%' },\r\n          size: { width: '2%', height: '4%' },\r\n          onClick: (dispatch) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({\r\n                id: 'desktopnetworknotconnected',\r\n              })\r\n            );\r\n          },\r\n        },\r\n        //secure network button\r\n        {\r\n          position: { left: '76.6%', top: '50.9%' },\r\n          size: { width: '24%', height: '8%' },\r\n          onClick: (dispatch) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({ id: 'pressonsecurenetwork' })\r\n            );\r\n          },\r\n        },\r\n        //connect button\r\n        {\r\n          position: { left: '89.5%', top: '45.45%' },\r\n          size: { width: '9.5%', height: '3.5%' },\r\n          onClick: (dispatch) => {\r\n            const feedbackText =\r\n              'Oh no! Open networks should be avoided whenever possible. Accessing sensitive information on such networks can result in that data getting compromised, e.g. login data to your banking. If given the choice, it is usually better to connect to a secured network.';\r\n\r\n            dispatch(gameActions.updatePoints({ points: POINTS_WRONG_ANSWER }));\r\n            dispatch(\r\n              gameActions.setActiveScreenId({ id: 'connectedopennetwork' })\r\n            );\r\n            dispatch(gameActions.setFeedbackDialogText({ text: feedbackText }));\r\n            dispatch(gameActions.toggleFeedbackDialog());\r\n            console.log('pressed on open button');\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    typeinpassword: {\r\n      component: fromUrl(typeinpassword),\r\n      buttons: [\r\n        //network icon in desktop bar\r\n        {\r\n          position: { left: '92%', top: '94.5%' },\r\n          size: { width: '2%', height: '4%' },\r\n          onClick: (dispatch) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({\r\n                id: 'desktopnetworknotconnected',\r\n              })\r\n            );\r\n          },\r\n        },\r\n        //open network button\r\n        {\r\n          position: { top: '28.1%', left: '76.4%' },\r\n          size: { width: '24%', height: '8%' },\r\n          onClick: (dispatch) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({ id: 'pressonopennetwork' })\r\n            );\r\n          },\r\n        },\r\n        //next button (after password entered)\r\n        {\r\n          position: { top: '52.1%', left: '79.7%' },\r\n          size: { width: '9.7%', height: '3.8%' },\r\n          onClick: (dispatch) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({ id: 'discoverableonnetwork' })\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      textFields: [\r\n        {\r\n          position: { left: '79.8%', top: '47.3%' },\r\n          size: { height: '03.2%', width: '18.9%' },\r\n          type: 'password',\r\n        },\r\n      ],\r\n    },\r\n    connectedopennetwork: {\r\n      component: fromUrl(connectedopennetwork),\r\n      buttons: [\r\n        //secure network button\r\n        {\r\n          position: { left: '76.6%', top: '46.17%' },\r\n          size: { width: '24%', height: '8%' },\r\n          onClick: (dispatch) => {\r\n            dispatch(\r\n              gameActions.setActiveScreenId({ id: 'pressonsecurenetwork' })\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    connectedsecurenetwork: {\r\n      component: fromUrl(connectedsecurenetwork),\r\n      buttons: [],\r\n    },\r\n    discoverableonnetwork: {\r\n      component: fromUrl(discoverableonnetwork),\r\n      buttons: [\r\n        {\r\n          position: { top: '59%', left: '79.7%' },\r\n          size: { width: '9.7%', height: '3.8%' },\r\n          onClick: () => {\r\n            window.alert('fail');\r\n          },\r\n        },\r\n        {\r\n          position: { top: '59%', left: '89.5%' },\r\n          size: { width: '9.7%', height: '3.8%' },\r\n          onClick: (dispatch) => {\r\n            dispatch(\r\n                gameActions.setActiveScreenId({ id: 'connectedsecurenetwork' })\r\n            );\r\n            dispatch(gameActions.updatePoints({points: 10}))\r\n            dispatch(gameActions.setNextTaskAndScreen({nextScreenId:'antiviruspopup', nextTaskId:2}))\r\n            dispatch(gameActions.setFeedbackDialogText({ text: \"Good! It’s always better to leave attackers the least possible amount of attack surface, which you just did.\" }));\r\n            dispatch(gameActions.toggleFeedbackDialog());\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\nexport default task1data;\r\n","export default __webpack_public_path__ + \"static/media/antiviruspopup.98332630.png\";","export default __webpack_public_path__ + \"static/media/antivirussettingsoff.0443898b.png\";","export default __webpack_public_path__ + \"static/media/antivirussettingson.52d29d00.png\";","import { AppDispatch } from '../store';\r\nimport task1data from './task1';\r\nimport task2data from './task2';\r\nimport task3data from './task3';\r\n\r\nexport interface TaskData {\r\n  title: string;\r\n  setting?: string;\r\n  instructions?: string;\r\n  description: string;\r\n  screens: { [key: string]: ScreenData };\r\n}\r\n\r\nexport type ScreenElement<T> = {\r\n  position: { top: number | string; left: number | string };\r\n  size: { width: number | string; height: number | string };\r\n} & T;\r\n\r\nexport interface ScreenData {\r\n  component: React.ReactNode;\r\n  buttons?: ScreenElement<{\r\n    onClick?: (dispatch: AppDispatch) => void;\r\n  }>[];\r\n  textFields?: ScreenElement<{\r\n    placeholder?: string;\r\n    type?: string;\r\n  }>[];\r\n}\r\n\r\nconst gameTasks: { [taskId: string]: TaskData } = {\r\n  1: task1data,\r\n  2: task2data,\r\n  3: task3data\r\n};\r\nexport default gameTasks;\r\nexport const POINTS_WRONG_ANSWER = -30;\r\n","import { TaskData } from './index';\nimport { fromUrl } from '../components/AppImage';\nimport antiviruspopup from '../assets/tasks/2/antiviruspopup.png';\nimport antivirussettingsoff from '../assets/tasks/2/antivirussettingsoff.png';\nimport antivirussettingson from '../assets/tasks/2/antivirussettingson.png';\nimport { gameActions } from 'store/game';\nconst task2data: TaskData = {\n  title: 'Antivirus',\n  description: 'Deal appropriately with default antivirus',\n  screens: {\n    antiviruspopup: {\n      component: fromUrl(antiviruspopup),\n      buttons: [\n        {\n            position: {left: '75.3%', top: '78.23%'},\n            size: {width: '23.37%', height: '15.68%'},\n            onClick: (dispatch) => {\n                dispatch(gameActions.setActiveScreenId({id: 'antivirussettingsoff'}));\n            },\n        },\n      ],\n    },\n    antivirussettingsoff: {\n      component: fromUrl(antivirussettingsoff),\n      buttons: [\n        {\n          position: {left: '38.88%', top: '50.53%'},\n          size: {width: '2.75%', height: '2.35%'},\n          onClick: (dispatch) => {\n            dispatch(gameActions.updatePoints({points:10}));\n            dispatch(gameActions.setActiveScreenId({id:'antivirussettingson'}));\n            dispatch(gameActions.setNextTaskAndScreen({nextScreenId:'changepassword', nextTaskId:3}))\n            dispatch(gameActions.setFeedbackDialogText({text:\"Alright! Now you are finally protected from known threats again. Never turn off your antivirus program, even if a software asks for it!\"}))\n            dispatch(gameActions.toggleFeedbackDialog());\n          },\n        },\n        {\n          position: {left: '79.32%', top: '1.22%'},\n          size: {width: '2.65%', height: '3.35%'},\n          onClick: (dispatch) => {\n            dispatch(gameActions.updatePoints({points:-10}));\n            dispatch(gameActions.setNextTaskAndScreen({nextScreenId:'changepassword', nextTaskId:3}))\n            dispatch(gameActions.setFeedbackDialogText({text:\"What are you doing?! You were supposed to turn on the antivirus software! Even just the default Windows virus & threat protection will keep you safe from known malware and attacks. \"}))\n            dispatch(gameActions.toggleFeedbackDialog());\n          },\n        },\n        {\n          position: {left: '38.88%', top: '75.5%'},\n          size: {width: '2.65%', height: '2.35%'},\n          onClick: (dispatch) => {\n            dispatch(gameActions.updatePoints({points:-10}));\n            dispatch(gameActions.setNextTaskAndScreen({nextScreenId:'changepassword', nextTaskId:3}))\n            dispatch(gameActions.setFeedbackDialogText({text:\"What are you doing?! You were supposed to turn on the antivirus software, not turn it off even further! Even just the default Windows virus & threat protection will keep you safe from known malware and attacks.\"}))\n            dispatch(gameActions.toggleFeedbackDialog());\n          },\n        }\n      ]\n    },\n    antivirussettingson: {\n      component: fromUrl(antivirussettingson),\n      buttons : []\n    }\n  },\n};\nexport default task2data;\n","import { TaskData } from '.';\nimport { fromUrl } from '../components/AppImage';\nimport { gameActions } from 'store/game';\nimport { POINTS_WRONG_ANSWER } from './';\n\nimport changepassword from 'assets/tasks/3/changepassword.png';\n\nconst task1data: TaskData = {\n  title: 'Choose a safe password.',\n  setting:\n    'It has been 6 months since you have changed your password.',\n  instructions:\n    'Choose a safe password.',\n  description: 'Choose a safe password.',\n  screens: {\n    changepassword: {\n      component: fromUrl(changepassword),\n      buttons: [\n        {\n          position: { left: '92%', top: '94.5%' },\n          size: { width: '2%', height: '4%' },\n          onClick: (dispatch) => {\n            // dispatch(\n            //   gameActions.setActiveScreenId({ id: 'availablenetworks' })\n            // );\n          },\n        },\n      ],\n    },\n  },\n};\n\nexport default task1data;\n","export default __webpack_public_path__ + \"static/media/changepassword.02533d2c.png\";","import React, {useEffect, useState} from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {AppDispatch, AppState} from '../store';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {gameActions} from \"../store/game\";\n\nconst DialogTitle = (props: {\n  text:string;\n  onConfirmation?: (dispatch: AppDispatch) => void;\n}) => {\n  return (\n      <MuiDialogTitle disableTypography className=\"MuiTypography-root MuiTypography-h6\" >\n        <Typography variant=\"h6\">{props.text}</Typography>\n      </MuiDialogTitle>\n  );\n};\n\nexport default function FeedbackDialog(\n) {\n    const gameState = useSelector((state: AppState) => state.game);\n  const dispatch = useDispatch();\n  const onConfirmation = function() {\n      dispatch(gameActions.toggleFeedbackDialog())\n      console.log(gameState.nextScreenId);\n      console.log(gameState.nextTaskId);\n      dispatch(gameActions.setActiveTaskId({id: gameState.nextTaskId}));\n      dispatch(gameActions.setActiveScreenId({id: gameState.nextScreenId}));\n\n  }\n    const [isOpen, setIsOpen] = useState(false);\n    const [dialogText, setDialogText] = useState('');\n    useEffect(() => {\n        setIsOpen(gameState.showFeedbackDialog ? gameState.showFeedbackDialog: false);\n        setDialogText(gameState.feedbackText? gameState.feedbackText: '');\n    }, [gameState.showFeedbackDialog, gameState.feedbackText]);\n    return (\n    <div>\n          <Dialog open={isOpen}>\n              <DialogTitle text={dialogText}></DialogTitle>\n              <DialogActions>\n                  <Button autoFocus onClick={onConfirmation} color=\"primary\">\n                      Go to next task\n                  </Button>\n            </DialogActions>\n         </Dialog>\n\n    </div>\n  );\n\n}\n","import React, { useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '../store';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor:\n      theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#1a90ff',\n  },\n}))(LinearProgress);\n\nexport default function CustomizedProgressBar() {\n  const [progress, setProgress] = React.useState(50);\n  const gameState = useSelector((state: AppState) => state.game);\n  useEffect(() => {\n    const progress = (gameState.points / 300) * 100;\n    setProgress(progress);\n  }, [gameState.points]);\n  return (\n    <div>\n      <BorderLinearProgress variant=\"determinate\" value={progress} />\n    </div>\n  );\n}\n","import { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ActionableImage from '../../components/ActionableImage';\r\nimport { AppState } from '../../store';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { gameActions } from '../../store/game';\r\nimport gameItems, { ScreenData } from '../../game-data';\r\nimport FeedbackDialog from '../../components/FeedbackDialog';\r\nimport CustomizedProgressBar from '../../components/ProgressBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  imgContainer: {\r\n    margin: theme.spacing(4),\r\n  },\r\n  btnContainer: {\r\n    margin: theme.spacing(0),\r\n  },\r\n}));\r\n\r\nexport default function QuizGame() {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const gameState = useSelector((state: AppState) => state.game);\r\n  const [screenData, setScreenData] = useState(\r\n      undefined as ScreenData | undefined\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(gameActions.initializeFeedbackDialog())\r\n    dispatch(gameActions.setActiveTaskId({ id: 2 }));\r\n    dispatch(\r\n      gameActions.setActiveScreenId({ id: 'antiviruspopup' })\r\n    );\r\n    dispatch(gameActions.initializePoints());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setScreenData(\r\n      gameState.activeTaskId && gameState.activeScreenId\r\n        ? gameItems[gameState.activeTaskId].screens[gameState.activeScreenId]\r\n        : undefined\r\n    );\r\n  }, [gameState.activeTaskId, gameState.activeScreenId]);\r\n\r\n  if (!screenData) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12}>\r\n        <CustomizedProgressBar />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.imgContainer}>\r\n        <ActionableImage {...screenData} />\r\n              <FeedbackDialog\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport gameItems from 'game-data';\nimport Typography from '@material-ui/core/Typography';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '../store';\n\nfunction getSteps() {\n  const keys = Object.keys(gameItems).sort();\n  return keys.map((x) => gameItems[x].title);\n}\n\nfunction getStepContent(step: number) {\n  return gameItems[step + 1] ? gameItems[step + 1].description : '';\n}\n\nexport default function VerticalStepper() {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const gameState = useSelector((state: AppState) => state.game);\n  useEffect(() => {\n    let activeTaskId = gameState.activeTaskId ? gameState.activeTaskId : -1;\n    activeTaskId = parseInt(activeTaskId.toString());\n    console.log(activeTaskId);\n    if (activeTaskId !== -1) {\n      setActiveStep(activeTaskId - 1);\n    }\n  }, [gameState.activeTaskId]);\n  return (\n    <div>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              <Typography>{getStepContent(index)}</Typography>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  );\n}\n","import React, { PropsWithChildren } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Info, QuestionAnswer, List } from '@material-ui/icons';\nimport { Box, Paper, Tab, Tabs, Typography } from '@material-ui/core';\nimport VerticalStepper from 'components/Stepper';\n\nfunction TabPanel(\n  props: PropsWithChildren<{\n    tabId: number;\n    activeTabId: number;\n  }>\n) {\n  return (\n    <div role=\"tabpanel\" hidden={props.activeTabId !== props.tabId}>\n      {props.activeTabId === props.tabId && <Box p={3}>{props.children}</Box>}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: '100%',\n  },\n}));\n\nexport default function TabsPanel(props: {\n  info: { title: string; setting?: string; instructions?: string };\n}) {\n  const classes = useStyles();\n  const [activeTab, setActiveTab] = React.useState(0);\n\n  return (\n    <>\n      <Paper square className={classes.paper} elevation={3}>\n        <Tabs\n          centered\n          value={activeTab}\n          onChange={(e, v) => {\n            setActiveTab(v);\n          }}\n        >\n          <Tab icon={<Info />} />\n          <Tab icon={<List />} />\n          <Tab icon={<QuestionAnswer />} />\n        </Tabs>\n      </Paper>\n      <TabPanel activeTabId={activeTab} tabId={0}>\n        <Typography gutterBottom variant=\"h4\">\n          {props.info.title}\n        </Typography>\n        <Typography gutterBottom variant=\"body1\">\n          {props.info.setting}\n        </Typography>\n        <Typography gutterBottom variant=\"body2\">\n          {props.info.instructions}\n        </Typography>\n      </TabPanel>\n      <TabPanel activeTabId={activeTab} tabId={1}>\n        <VerticalStepper />\n      </TabPanel>\n      <TabPanel activeTabId={activeTab} tabId={2}>\n        Item Three\n      </TabPanel>\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nconst getWindowDimensions = () => ({\n  width: window.innerWidth,\n  height: window.innerHeight,\n});\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions());\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import { Button, makeStyles, Paper } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { DoubleArrow } from '@material-ui/icons';\nimport TabsPanel from './TabsPanel';\nimport useWindowDimensions from 'hooks/useWindowDimensions';\nimport { AppState } from 'store';\nimport { useSelector } from 'react-redux';\nimport gameTasks, { TaskData } from 'game-data';\n\nconst sidebarWidth = 530;\n\nconst useStyles = makeStyles((theme) => ({\n  sidebarContainer: {\n    position: 'absolute',\n    top: '1rem',\n    height: 'calc(100% - 2rem)',\n    zIndex: 100,\n    display: 'flex',\n  },\n  paper: {\n    width: sidebarWidth,\n    transition: 'all 0.3s',\n    padding: theme.spacing(2),\n\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n    },\n  },\n  drawerBtn: {\n    transition: 'all 0.3s',\n  },\n}));\n\nexport default function TaskDescriptionPanel() {\n  const [panelVisible, setPanelVisible] = useState(false);\n  const [width, setWidth] = useState(0);\n  const styles = useStyles();\n\n  const [activeTask, setActiveTask] = useState<TaskData | undefined>();\n\n  const { width: screenWidth } = useWindowDimensions();\n\n  const activeTaskId = useSelector(\n    (state: AppState) => state.game.activeTaskId\n  );\n\n  useEffect(() => {\n    setActiveTask(activeTaskId ? gameTasks[activeTaskId] : undefined);\n  }, [activeTaskId]);\n\n  useEffect(() => {\n    setWidth(screenWidth > 600 ? sidebarWidth : screenWidth);\n  }, [screenWidth]);\n\n  return (\n    <div className={styles.sidebarContainer}>\n      <Paper\n        className={styles.paper}\n        style={{ marginLeft: panelVisible ? 0 : -width }}\n      >\n        <TabsPanel\n          info={{\n            title: activeTask?.title ?? '',\n            instructions: activeTask?.instructions,\n            setting: activeTask?.setting,\n          }}\n        />\n      </Paper>\n      <Button onClick={() => setPanelVisible(!panelVisible)}>\n        <DoubleArrow\n          className={styles.drawerBtn}\n          style={{ transform: panelVisible ? 'rotate(180deg)' : '' }}\n        />\n      </Button>\n    </div>\n  );\n}\n","import { Container, CssBaseline, ThemeProvider } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './styles/styles.css';\r\nimport theme from './theme';\r\nimport QuizGame from './views/QuizGame';\r\nimport TaskDescriptionPanel from 'components/TaskDescriptionPanel/TaskDescriptionPanel';\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <div>\r\n        <TaskDescriptionPanel />\r\n        <Container maxWidth=\"lg\">\r\n          <QuizGame />\r\n        </Container>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction } from '@reduxjs/toolkit';\r\nimport { Action, combineReducers } from 'redux';\r\n\r\nimport game from './game';\r\n\r\nexport const rootReducer = combineReducers({\r\n  game,\r\n});\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type AppThunk = ThunkAction<void, AppState, unknown, Action<string>>;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}